<svg host="65bd71144e" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="4841px" height="4281px" viewBox="-0.5 -0.5 4841 4281" content="&lt;mxfile&gt;&lt;diagram id=&quot;LPARxKbuxCxxcUjlDuEL&quot; name=&quot;Page-1&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);">
    <defs/>
    <g>
        <path d="M 440 196.67 L 880 230" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 875.71 233.69 L 876.31 225.71" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 440 250 L 505.23 270.75" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <ellipse cx="508.56" cy="271.82" rx="3" ry="3" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <path d="M 521.21 271.64 L 512.38 273.03 L 518.79 279.27 M 512.38 273.03 L 520 275.45" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 355 360 L 415 440" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 409.4 439.2 L 415.8 434.4" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="0" y="0" width="440" height="360" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 442px; height: 360px; padding-top: 0px; margin-left: 0px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 440px; height: 360px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        DB
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - db_dir_path: PathBuf
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - next_scnd_idx_num: AtomicU64
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + prim_lsm LsmTree&lt;PKShared, PVShared&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    +
                                    <font color="#3399ff">
                                        scnd_idxs
                                    </font>
                                    :
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        RwLock
                                    </span>
                                    &lt; Dict&lt; Arc&lt;SVSpec&gt;, SecondaryIndex &gt; &gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    +
                                    <font color="#00994d">
                                        commit_ver_state
                                    </font>
                                    : VersionState&lt;CommitVer&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    +
                                    <font color="#0000ff">
                                        commit_mtx
                                    </font>
                                    :
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        Mutex
                                    </span>
                                    &lt;()&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    +
                                    <font color="#ff6666">
                                        is_terminating
                                    </font>
                                    : AtomicBool
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    +
                                    <font color="#990000">
                                        job_cv_tx
                                    </font>
                                    : watch::Sender&lt;()&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        // Use tokio's `watch` channel as a Condition Variable.
                                    </span>
                                </p>
                                <br/>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - load_or_new(PathBuf) -&gt; Res&lt;Self&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + load_db_and_gc_job(PathBuf)
                                    <span>
                                        -&gt; Res&lt;( Arc&lt;DB&gt;, Future&lt;Res&lt;()&gt;&gt; )&gt;
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        <br/>
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + format_new_scnd_idx_dir_path() -&gt; Res&lt;PathBuf&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        <br/>
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    +
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    ()
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="0" y="12" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    DB...
                </text>
            </switch>
        </g>
        <path d="M 1840 124.71 L 1910.75 87.25" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/>
        <ellipse cx="1913.84" cy="85.61" rx="3" ry="3" fill="none" stroke="#000000" pointer-events="all"/>
        <path d="M 1922.57 76.46 L 1917.37 83.74 L 1926.32 83.54 M 1917.37 83.74 L 1924.44 80" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 880 552.86 L 800 581.43" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 802.42 576.32 L 805.11 583.85" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1400 340 L 1480 303.08" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1478.04 308.38 L 1474.69 301.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1042.42 920 L 1025.45 1000" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1022.37 995.26 L 1030.2 996.92" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1400 537.04 L 1465.14 556.34" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <ellipse cx="1468.49" cy="557.33" rx="3" ry="3" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <path d="M 1481.14 556.91 L 1472.33 558.47 L 1478.86 564.58 M 1472.33 558.47 L 1480 560.74" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1376.97 920 L 1411.08 986.22" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <ellipse cx="1412.69" cy="989.33" rx="3" ry="3" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <path d="M 1421.74 998.17 L 1414.52 992.89 L 1414.63 1001.83 M 1414.52 992.89 L 1418.18 1000" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 880 131.18 L 823.72 60" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <rect x="880" y="0" width="520" height="920" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 522px; height: 920px; padding-top: 0px; margin-left: 880px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 520px; height: 920px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        LSMTree&lt;K, V&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - lsm_dir_path: PathBuf,
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + list: Pin&lt;Box&lt; AtomicLinkedList&lt; CommittedEntrySet&lt;K,V&gt; &gt; &gt;&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    -
                                    <font color="#990099">
                                        list_ver_state
                                    </font>
                                    : VersionState&lt;ListVer&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    -
                                    <font color="#ff99ff">
                                        dangling_slices
                                    </font>
                                    : Pin&lt;Box&lt; AtomicQueue&lt; DanglingSlice&lt;K,V&gt; &gt; &gt;&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - next_entryset_num: AtomicU64
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + load_or_new(PathBuf) -&gt; Res&lt;Self&gt;
                                </p>
                                <hr/>
                                <p style="margin: 0px 0px 0px 4px">
                                    +
                                    <font color="#990099">
                                        get_one
                                    </font>
                                    (
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    Opt&lt;&amp;WritableMemLog&lt;K,V&gt;&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    commit_ver_hi_excl: Opt&lt;CommitVer&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    commit_ver_lo_incl: Opt&lt;CommitVer&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    &amp;Q,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    on_trailing_list_ver_advanced: FnOnce(),
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    ) -&gt; Result&lt;Opt&lt;(K, V)&gt;&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    // We could return Entry here, and defer `Arc::clone()`ing to caller.
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    // But for developer convenience, return owned (K, V) instead.
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    // We filter out Tombstone.
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    list_ver_ =
                                    <font color="#990099">
                                        list_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        hold_leading
                                    </span>
                                    ();
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    found = /* Traverse from newest to oldest entryset. Stop when found. */
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <font color="#990099">
                                        list_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        unhold
                                    </span>
                                    (list_ver_, on_trailing_list_ver_advanced);
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return found;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    +
                                    <font color="#990099">
                                        get_range
                                    </font>
                                    (
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    Opt&lt;&amp;WritableMemLog&lt;K,V&gt;&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    commit_ver_hi_excl: Opt&lt;CommitVer&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    commit_ver_lo_incl: Opt&lt;CommitVer&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    k_lo: Opt&lt;&amp;Q&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    k_hi: Opt&lt;&amp;Q&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    handle_entries: FnOnce(Iter&lt;Entry&lt;K,V&gt;&gt;) -&gt; CbEntRet,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    on_trailing_list_ver_advanced: FnOnce(),
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    ) -&gt; CbEntRet
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    list_ver_ =
                                    <font color="#990099">
                                        list_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        hold_leading
                                    </span>
                                    ();
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    entries = /* K-merge. Then filter out Tombstones. */
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    cb_ret = handle_entries(entries);
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <font color="#990099">
                                        list_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        unhold
                                    </span>
                                    (list_ver_, on_trailing_list_ver_advanced);
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return cb_ret;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    +
                                    <font color="#990099">
                                        iter_entrysets
                                    </font>
                                    (
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    commit_ver_hi_excl: Opt&lt;CommitVer&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    commit_ver_lo_incl: Opt&lt;CommitVer&gt;,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    handle_entrysets: FnOnce(Iter&lt;&amp;CommittedEntrySet&lt;K,V&gt;&gt;) -&gt; CbEntRet
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    on_trailing_list_ver_advanced: FnOnce(),
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    ) -&gt; CbEntRet
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    list_ver_ =
                                    <font color="#990099">
                                        list_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        hold_leading
                                    </span>
                                    ();
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    entrysets = /* list.iter() */
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    cb_ret = handle_entries(entrysets);
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <font color="#990099">
                                        list_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        unhold
                                    </span>
                                    (list_ver_, on_trailing_list_ver_advanced);
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return cb_ret;
                                </p>
                                <hr/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + create_writable_entryset() -&gt; Res&lt;WritableMemLog&lt;K,V&gt;&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + format_new_entryset_dir_path() -&gt; Res&lt;EntrySetDir&gt;
                                </p>
                                <br/>
                                + commit(WritableMemLog&lt;K,V&gt;, CommitVer) -&gt; Res&lt;()&gt;
                                <hr/>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + modify_linked_list(min_separate_commit_ver: CommitVer) -&gt; Res&lt;()&gt;
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + delete_dangling_slices() -&gt; Res&lt;()&gt;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="880" y="12" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree&lt;K, V&gt;...
                </text>
            </switch>
        </g>
        <path d="M 1880 595.76 L 2104.61 568.53" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/>
        <ellipse cx="2108.09" cy="568.11" rx="3" ry="3" fill="none" stroke="#000000" pointer-events="all"/>
        <path d="M 2116.51 571.12 L 2115.55 563.18 M 2111.56 567.69 L 2120 566.67" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1880 674.55 L 2105.05 735.92" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/>
        <ellipse cx="2108.42" cy="736.84" rx="3" ry="3" fill="none" stroke="#000000" pointer-events="all"/>
        <path d="M 2115.09 742.81 L 2117.19 735.09 M 2111.8 737.76 L 2120 740" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2120 40 L 2160 40" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2156 44 L 2156 36" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1880" y="0" width="240" height="80" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 242px; height: 80px; padding-top: 0px; margin-left: 1880px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 240px; height: 80px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        ListNode&lt;T&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + elem: ListElem&lt;T&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + older: AtomicPtr&lt; ListNode&lt;T&gt; &gt;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1880" y="12" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    ListNode&lt;T&gt;...
                </text>
            </switch>
        </g>
        <rect x="0" y="520" width="320" height="360" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 322px; height: 360px; padding-top: 520px; margin-left: 0px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 320px; height: 360px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        VersionStateLocked&lt;Ver&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + leading: Ver
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + gap: Multiset&lt;Ver&gt;
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + get_and_inc_leading() -&gt; Ver
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    penultimate_ = leading;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    leading += 1;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return penultimate_;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + hold_leading() -&gt; Ver
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    gap.add(leading);
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return leading;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + unhold(ver_: Ver) -&gt; ()
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    gap.remove(ver_);
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + advance_trailing(trail_: Ver) -&gt; Ver
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    while (trail_ &lt; leading) &amp;&amp; (! gap.contains(trail_)) :
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    trail_ += 1;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return trail_;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="0" y="532" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    VersionStateLocked&lt;Ver&gt;...
                </text>
            </switch>
        </g>
        <path d="M 360 680.95 L 320 684.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 323.6 680.4 L 324.36 688.36" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="360" y="440" width="440" height="440" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 442px; height: 440px; padding-top: 440px; margin-left: 360px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 440px; height: 440px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        VersionState&lt;Ver&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + locked:
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        Mutex
                                    </span>
                                    &lt; VersionStateLocked&lt;Ver&gt; &gt;
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + trailing: AtomicU64
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + new(Ver) -&gt; Self
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        <br/>
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    +
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        leading
                                    </span>
                                    () -&gt; Ver:
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    with guard = locked.
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        lock
                                    </span>
                                    (): ...
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        <br/>
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    +
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        get_and_inc_leading
                                    </span>
                                    () -&gt; Ver :
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    with guard = locked.
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        lock
                                    </span>
                                    (): ...
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return penultimate_ver;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    +
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        hold_leading
                                    </span>
                                    () -&gt; Ver :
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    with guard = locked.
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        lock
                                    </span>
                                    (): ...
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return leading;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    +
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        unhold
                                    </span>
                                    (ver_to_unhold: Ver, on_trailing_advanced: FnOnce()) -&gt; ()
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    with guard = locked.
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        lock
                                    </span>
                                    (): ...
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    +
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        hold_leading_and_unhold
                                    </span>
                                    (
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    ver_to_unhold: Ver, on_trailing_advanced: FnOnce()) -&gt; Ver:
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    with guard = locked.
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        lock
                                    </span>
                                    ():
                                    <span>
                                        ...
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return leading;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + trailing() -&gt; Ver
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    return self.trailing.load();
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="360" y="452" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    VersionState&lt;Ver&gt;...
                </text>
            </switch>
        </g>
        <path d="M 800 360.83 L 880 384.17" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 875.04 386.89 L 877.28 379.21" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="520" y="240" width="280" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 282px; height: 160px; padding-top: 240px; margin-left: 520px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 280px; height: 160px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        SecondaryIndex
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + scnd_idx_dir: PathBuf
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + spec: Arc&lt;SVSpec&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + lsm: LsmTree&lt;SVPK, PV&gt;
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    +
                                    <font color="#009999">
                                        is_built
                                    </font>
                                    : AtomicBool
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + new(PathBuf, Arc&lt;SVSpec&gt;) -&gt; Res&lt;Self&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + load(PathBuf) -&gt; Res&lt;Self&gt;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="520" y="252" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    SecondaryIndex...
                </text>
            </switch>
        </g>
        <path d="M 1480 303.08 L 1400 340" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <rect x="1480" y="0" width="360" height="440" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 362px; height: 440px; padding-top: 0px; margin-left: 1480px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 360px; height: 440px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        AtomicLinkedList&lt;T&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - dummy_newest: ListNode&lt;T&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - dummy_oldest: ListNode&lt;T&gt;
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        + new(Iter&lt;T&gt;) -&gt; Pin&lt;Box&lt;Self&gt;&gt;
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        <br/>
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        + iter() -&gt; Iter&lt; &amp;ListElem&lt;T&gt; &gt;
                                    </span>
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        // Traverse from dummy_newest.older to
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        //     just before dummy_oldest.
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        // Do not filter out any node.
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        <br/>
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        + push_newest(elem: ListElem&lt;T&gt;):
                                    </span>
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        Y = box ListNode { elem=elem, older=nullptr };
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        <br/>
                                    </span>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    Z = dummy_newest;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    X = Z.older.load();
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    Y.older = X;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    while true:
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    result = Z.older.comp_exch(X, Y);
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    match result:
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    case Err(R):
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    X = R;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    Y.older = X;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    case Ok(_):
                                </p>
                                <p style="margin: 0px ; margin-left: 4px"></p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    break;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1480" y="12" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    AtomicLinkedList&lt;T&gt;...
                </text>
            </switch>
        </g>
        <path d="M 1610.91 1240 L 1654.55 1280" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1657.25 1277.05 L 1648.65 1274.59 L 1651.84 1282.95" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1280" y="1000" width="400" height="240" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 402px; height: 240px; padding-top: 1000px; margin-left: 1280px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 400px; height: 240px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        DanglingSlice&lt;K, V&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + list_ver: ListVer
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + newest_incl: SendPtr&lt; ListNode&lt; CommittedEntrySet&lt;K,V&gt; &gt; &gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + oldest_incl: SendPtr&lt; ListNode&lt; CommittedEntrySet&lt;K,V&gt; &gt; &gt;
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        /*
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        Dropping a DanglingSlice is not automatic!
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        This fn must be called manually.
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        It may return an io error.
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        */
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + drop_dirs_and_memory() -&gt; Res&lt;()&gt;
                                    </span>
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        for each node:
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        delete entryset dir;
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        delete memory;
                                        <br/>
                                    </span>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1280" y="1012" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    DanglingSlice&lt;K, V&gt;...
                </text>
            </switch>
        </g>
        <path d="M 1012 1240 L 1014.46 1264.58" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <ellipse cx="1014.81" cy="1268.06" rx="3" ry="3" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <path d="M 1019.98 1279.6 L 1015.2 1272.04 L 1012.02 1280.4 M 1015.2 1272.04 L 1016 1280" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="800" y="1000" width="400" height="240" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 402px; height: 240px; padding-top: 1000px; margin-left: 800px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 400px; height: 240px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        AtomicQueue&lt;T&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - dummy_front: QueueNode&lt;T&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - last: AtomicPtr&lt; QueueNode&lt;T&gt; &gt;
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + new() -&gt; Pin&lt;Box&lt;Self&gt;&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    /*
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    Operations do NOT need to be thread-safe.
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    At any time, there is up to one thread reading or modifying this struct:
                                    <span>
                                        job().
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    However all operations do need to work on an immutably borrowed self.
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    */
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + push(T) -&gt; ()
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + pop() -&gt; Opt&lt;T&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + peek() -&gt; Opt&lt;&amp;T&gt;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="800" y="1012" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    AtomicQueue&lt;T&gt;...
                </text>
            </switch>
        </g>
        <path d="M 1140 1320 L 1180 1320" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1176 1324 L 1176 1316" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="900" y="1280" width="240" height="80" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 242px; height: 80px; padding-top: 1280px; margin-left: 900px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 240px; height: 80px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        QueueNode&lt;T&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + elem: QueueElem&lt;T&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + next: AtomicPtr&lt; QueueNode&lt;T&gt; &gt;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="900" y="1292" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    QueueNode&lt;T&gt;...
                </text>
            </switch>
        </g>
        <path d="M 2560 624.62 L 2704 680" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2698.83 682.3 L 2701.7 674.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2566.33 513.89 L 2680 500.77" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2561.11 514.49 L 2567.66 510.21 L 2566.33 513.89 L 2568.47 517.16 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2676.48 505.2 L 2675.57 497.25" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2120" y="440" width="440" height="200" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 442px; height: 200px; padding-top: 440px; margin-left: 2120px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 440px; height: 200px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        ReadonlyMemLog&lt;K, V&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + memtable: Memtable&lt;K, V&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + entryset_info: CommittedEntrySetInfo
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + from(WritableMemLog&lt;K,V&gt;, CommitVer) -&gt; Res&lt;Self&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + load(CommittedEntrySetInfo) -&gt; Res&lt;Self&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + remove_entryset_dir() -&gt; Res&lt;()&gt;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2120" y="452" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    ReadonlyMemLog&lt;K, V&gt;...
                </text>
            </switch>
        </g>
        <path d="M 2540.42 676.66 L 2597.45 641.57 C 2595.4 638.25 2600.51 635.11 2602.55 638.43 L 2602.55 638.43 L 2730 560" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2535.95 679.41 L 2540.08 672.76 L 2540.42 676.66 L 2543.75 678.73 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2728.69 565.5 L 2724.5 558.69" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2120" y="680" width="440" height="240" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 442px; height: 240px; padding-top: 680px; margin-left: 2120px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 440px; height: 240px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        SSTable&lt;K, V&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - sparse_file_offsets: Vec&lt; (K, u64) &gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + entryset_info: CommittedEntrySetInfo
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + new(entries: Iter&lt;Entry&lt;K, OptDat&lt;V&gt;&gt;&gt;, CommittedEntrySetInfo
                                    </span>
                                    <span>
                                        ) -&gt; Res&lt;Self&gt;
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + load(CommittedEntrySetInfo) -&gt; Res&lt;Self&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + get_one(&amp;Q) -&gt; Opt&lt;Res&lt;(K, OptDat&lt;V&gt;)&gt;&gt;
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + get_range(Opt&lt;&amp;Q&gt;, Opt&lt;&amp;Q&gt;) -&gt; Iter&lt;Res&lt;(K, OptDat&lt;V&gt;)&gt;&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + is_empty() -&gt; Res&lt;bool&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + remove_entryset_dir() -&gt; Res&lt;()&gt;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2120" y="692" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    SSTable&lt;K, V&gt;...
                </text>
            </switch>
        </g>
        <rect x="2160" y="0" width="240" height="80" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 7px; margin-left: 2162px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                enum
                                <b>
                                    ListElem
                                </b>
                                &lt;T&gt; {
                                <br/>
                                Elem(T),
                                <br/>
                                Dummy { is_terminus: AtomicBool },
                                <br/>
                                }
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2162" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    enum ListElem&lt;T&gt; {...
                </text>
            </switch>
        </g>
        <rect x="1180" y="1280" width="200" height="80" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1287px; margin-left: 1182px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                enum
                                <b>
                                    QueueElem
                                </b>
                                &lt;T&gt; {
                                <br/>
                                Elem(T),
                                <br/>
                                Dummy,
                                <br/>
                                }
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1182" y="1299" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    enum QueueElem&lt;T&gt; {...
                </text>
            </switch>
        </g>
        <path d="M 2765 1480 L 2565.82 1568.52" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2561.02 1570.66 L 2566 1564.62 L 2565.82 1568.52 L 2568.84 1571.01 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 3015 1360 L 3114.35 1308.16" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3119.01 1305.73 L 3114.42 1312.08 L 3114.35 1308.16 L 3111.18 1305.87 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2080" y="1000" width="320" height="180" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1007px; margin-left: 2082px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                enum
                                <b>
                                    Entry
                                </b>
                                &lt;'a, K, V&gt; {
                                <br/>
                                Ref(( &amp;'a K, &amp;'a V )),
                                <br/>
                                Own(Res&lt;( K, V )&gt;),
                                <br/>
                                }
                                <br/>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + try_borrow() -&gt; Res&lt;( &amp;'a K, &amp;'a V )&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + take_kv() -&gt; Res&lt;( K, V )&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    etc
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2082" y="1019" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    enum Entry&lt;'a, K, V&gt; {...
                </text>
            </switch>
        </g>
        <rect x="4000" y="3240" width="800" height="840" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 798px; height: 1px; padding-top: 3247px; margin-left: 4002px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <b>
                                    Future design evolutions
                                </b>
                                <br/>
                                <br/>
                                <ul>
                                    <li>
                                        <span>
                                            Use Asynchronous file I/O (io_uring).
                                        </span>
                                        <br/>
                                    </li>
                                    <ul>
                                        <li>
                                            Impl:
                                        </li>
                                        <ul>
                                            <li>
                                                Convert Iterators to Streams.
                                            </li>
                                        </ul>
                                        <li>
                                            Advantages:
                                        </li>
                                        <ul>
                                            <li>
                                                Performance benefit due to concurrent file I/O?
                                            </li>
                                        </ul>
                                        <li>
                                            Disadvantages:
                                        </li>
                                        <ul>
                                            <li>
                                                Performance penalty due to increased switching between async/await futures?
                                            </li>
                                        </ul>
                                    </ul>
                                    <li>
                                        Run one flushing+compacting job per index.
                                    </li>
                                    <ul>
                                        <li>
                                            Impl:
                                        </li>
                                        <ul>
                                            <li>
                                                Each LsmTree contains its own Task.
                                            </li>
                                        </ul>
                                        <li>
                                            Advantages:
                                        </li>
                                        <ul>
                                            <li>
                                                It's easier to write the job logic for prioritizing certain slices over others.
                                            </li>
                                        </ul>
                                        <li>
                                            Disadvantages:
                                        </li>
                                        <ul>
                                            <li>
                                                Need to manage Task-switching, while still prioritizing flushing, while also avoiding starvation of any jobs.
                                            </li>
                                        </ul>
                                    </ul>
                                    <li>
                                        Thrread-per-core.
                                    </li>
                                    <ul>
                                        <li>
                                            Impl:
                                        </li>
                                        <ul>
                                            <li>
                                                Indexes are partitioned and assigned to CPU cores.
                                            </li>
                                            <li>
                                                Each core operates a single thread: an actor that accepts requests for any of the 1+ indexes assigned to the core.
                                            </li>
                                            <ul>
                                                <li>
                                                    get one
                                                </li>
                                                <li>
                                                    get range
                                                </li>
                                                <li>
                                                    push commit
                                                </li>
                                                <li>
                                                    flush/compact &amp; replace
                                                </li>
                                            </ul>
                                            <li>
                                                For transactions:
                                            </li>
                                            <ul>
                                                <li>
                                                    Each message contains a oneshot channel, which delivers the query result to the transaction task.
                                                </li>
                                                <li>
                                                    For the "get SV range" operation, two indexes are involved: 1) the SI executes "get range", 2) the SI sends a request to the PI, 3) the PI sends the result to the transaction task.
                                                </li>
                                            </ul>
                                            <li>
                                                Does there need to be a thread/task pool that runs all transactions and flushing+compacting job(s)?
                                            </li>
                                            <li>
                                                The logical usage of indexes by any {user operation, job} becomes equivalent to acquiring a mutex on each index for the duration of each index API call.
                                                <br/>
                                            </li>
                                        </ul>
                                        <li>
                                            Advantages:
                                        </li>
                                        <ul>
                                            <li>
                                                Better caching of RAM? (This pertains mostly to memtables in commits?)
                                                <br/>
                                            </li>
                                            <li>
                                                Better caching of inodes?
                                            </li>
                                        </ul>
                                        <li>
                                            Disadvantages:
                                        </li>
                                        <ul>
                                            <li>
                                                ?
                                            </li>
                                        </ul>
                                    </ul>
                                    <li>
                                        GC job prioritization strategy.
                                    </li>
                                    <ul>
                                        <li>
                                            (Proposal) When compacting MemLogs, read the gap multiset. The interval in between each held version is mergeable.
                                        </li>
                                        <ul>
                                            <li>
                                                <span>
                                                    Bonus if we can use a Dict that can be read locklessly. Is it possible?
                                                </span>
                                                <br/>
                                            </li>
                                        </ul>
                                        <li>
                                            (Proposal) Notification of list version should be per-LsmTree ?
                                        </li>
                                    </ul>
                                    <li>
                                        Performance improvements around conflict-checking and committing.
                                    </li>
                                    <ul>
                                        <li>
                                            Early detection of conflicts?
                                        </li>
                                    </ul>
                                    <li>
                                        Transactions should handle large data.
                                    </li>
                                    <ul>
                                        <li>
                                            Impl:
                                        </li>
                                        <ul>
                                            <li>
                                                written_* is an LSMTree, rather than just a WritableMemLog. This txn-local LSMTree is flushed and compacted, just like any other LSMTree. The flushing+compaction might be done synchronously within the txn Task, rather than by the global GC job.
                                            </li>
                                            <li>
                                                <span>
                                                    Add helpers for paginating `get` operations.
                                                </span>
                                            </li>
                                        </ul>
                                    </ul>
                                </ul>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="4002" y="3259" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    Future design evolutions...
                </text>
            </switch>
        </g>
        <rect x="4600" y="4080" width="200" height="20" fill="none" stroke="none" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 4090px; margin-left: 4601px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                https://github.com/ysono/pancake/
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="4700" y="4094" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    https://github.com/ysono/pancake/
                </text>
            </switch>
        </g>
        <path d="M 440 1468.44 L 464.91 1462.6" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <ellipse cx="468.32" cy="1461.8" rx="3" ry="3" fill="none" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <path d="M 479.09 1455.17 L 472.21 1460.89 L 480.91 1462.96 M 472.21 1460.89 L 480 1459.06" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 440 1540.47 L 470 1543.26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <rect x="0" y="1440" width="440" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 442px; height: 160px; padding-top: 1440px; margin-left: 0px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 440px; height: 160px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        IntervalSet&lt;T&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - itvs: Vec&lt; Interval&lt;T&gt; &gt;
                                    <br/>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + add(Interval&lt;T&gt;)
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + clear()
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + merge()
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + overlaps_with(points: Iter&lt;U: TryPartialOrd&lt;T&gt;&gt;) -&gt; Res&lt;bool&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="0" y="1452" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    IntervalSet&lt;T&gt;...
                </text>
            </switch>
        </g>
        <rect x="480" y="1400" width="120" height="90" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 122px; height: 90px; padding-top: 1400px; margin-left: 480px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 120px; height: 90px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        Interval&lt;T&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + lo_incl: Opt&lt;T&gt;
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + hi_incl: Opt&lt;T&gt;
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="480" y="1412" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    Interval&lt;T&gt;...
                </text>
            </switch>
        </g>
        <path d="M 2475.65 400 L 2597.75 508.01 C 2600.34 505.09 2604.83 509.07 2602.25 511.99 L 2602.25 511.99 L 2684.42 584.68 C 2687 581.76 2691.5 585.73 2688.91 588.65 L 2688.91 588.65 L 2792.17 680" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2786.53 680.35 L 2791.83 674.35" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2560 263.08 L 2680 253.85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2676.32 258.14 L 2675.7 250.16" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2120 400 L 2046.84 572.91 C 2043.25 571.39 2040.91 576.92 2044.51 578.44 L 2044.51 578.44 L 1992.2 702.06 C 1988.61 700.55 1986.27 706.07 1989.87 707.59 L 1989.87 707.59 L 1953.25 794.14" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1951.2 798.97 L 1950.71 791.16 L 1953.25 794.14 L 1957.16 793.89 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2120" y="160" width="440" height="240" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 442px; height: 240px; padding-top: 160px; margin-left: 2120px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 440px; height: 240px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        WritableMemLog&lt;K, V&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + memtable: Memtable&lt;K, V&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + log_writer: DatumWriter
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + entryset_dir: EntrySetDir,
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + new(EntrySetDir) -&gt; Res&lt;Self&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + put(K, OptDatum&lt;V&gt;) -&gt; Res&lt;()&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + clear() -&gt; Res&lt;()&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + remove_entryset_dir() -&gt; Res&lt;()&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2120" y="172" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    WritableMemLog&lt;K, V&gt;...
                </text>
            </switch>
        </g>
        <rect x="2680" y="680" width="360" height="120" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 362px; height: 120px; padding-top: 680px; margin-left: 2680px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 360px; height: 120px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        Memtable&lt;K, V&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + BTreeMap&lt;K, OptDat&lt;V&gt;&gt;
                                    <br/>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + get_one(&amp;Q) -&gt; Opt&lt;(&amp;K, &amp;OptDat&lt;V&gt;)&gt;
                                    </span>
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + get_range(Opt&lt;&amp;Q&gt;, Opt&lt;&amp;Q&gt;) -&gt; Iter&lt;(&amp;K, &amp;OptDat&lt;V&gt;)&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2680" y="692" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    Memtable&lt;K, V&gt;...
                </text>
            </switch>
        </g>
        <rect x="3120" y="1000" width="480" height="360" rx="7.2" ry="7.2" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 1007px; margin-left: 3122px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <div>
                                        fn LSMTree::load_or_new(lsm_dir: PathBuf):
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        pq = new empty;
                                    </div>
                                    <div>
                                        for entryset_dir under lsm_dir:
                                    </div>
                                    <div>
                                        match load CommittedEntrySetInfo:
                                    </div>
                                    <div>
                                        case CommitInfo was not found:
                                    </div>
                                    <div>
                                        rm -r entryset_dir;
                                    </div>
                                    <div>
                                        case found(es_info):
                                    </div>
                                    <div>
                                        pq.push(es_info)
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        entrysets = empty vec;
                                    </div>
                                    <div>
                                        while pq is not empty:
                                    </div>
                                    <div>
                                        curr_es_info = pq.pop();
                                    </div>
                                    <div>
                                        if entrysets is empty or
                                    </div>
                                    <div>
                                        entrysets.last().commit_ver_lo_incl &gt; curr_es_info.commit_ver_hi_incl:
                                    </div>
                                    <div>
                                        entryset = CommittedEntrySet::load(curr_info);
                                    </div>
                                    <div>
                                        entrysets.push(entryset);
                                    </div>
                                    <div>
                                        else:
                                    </div>
                                    <div>
                                        rm -r curr entryset_dir;
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                </div>
                                <div>
                                    lsm_list = AtomicLinkedList::from(entrysets);
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3122" y="1019" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    fn LSMTree::load_or_new(lsm_dir: PathBuf):...
                </text>
            </switch>
        </g>
        <path d="M 3348.25 960 L 3350.53 1000" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3160 640 L 3520 640 L 3520 930 L 3360 930 L 3361.6 960 L 3340 930 L 3160 930 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(180,3340,800)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 358px; height: 1px; padding-top: 678px; margin-left: 3162px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                Every committed entryset contains info on [lo_incl ... hi_incl] commit ver range, and not just one commit ver.
                                <br/>
                                <br/>
                                For traversing operations, the distinction between lo and hi is irrelevant. All commit version ranges encountered in a traversal are sorted (and contiguous and disjoint in case of PI). And none of the [lo..hi] ranges crosses over min_separate_commit_ver.
                                <br/>
                                <br/>
                                The range is required for deduping entrysets upon bootup, in case GC failed to remove dirs belonging to dangling entrysets.
                                <br/>
                                <br/>
                                Among entrysests that overlap in commit ver range, the one entryset with the newest timestamp is loaded, and all other entrysets are discarded.
                                <br/>
                                <br/>
                                Timestamp is just a monotonically increasing integer, and is not correlated with any system clock.
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3162" y="690" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    Every committed entryset contains info on [lo_incl ... hi_in...
                </text>
            </switch>
        </g>
        <path d="M 3040 490 L 3080 492.22" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3075.78 495.99 L 3076.23 488.01" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2860 393.63 L 2860 320" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2860 398.88 L 2856.5 391.88 L 2860 393.63 L 2863.5 391.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2864 324 L 2856 324" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2680" y="160" width="360" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 362px; height: 160px; padding-top: 160px; margin-left: 2680px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 360px; height: 160px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        EntrySetDir
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + path: PathBuf
                                    <br/>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + memlog_file_path() -&gt; PathBuf
                                    </span>
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + sstable_file_path() -&gt; PathBuf
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + commit_info_file_path() -&gt; PathBuf
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        <br/>
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        + load_commit_info(self)
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <span>
                                        -&gt; either CommittedEntrySetInfo or "not found"
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2680" y="172" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    EntrySetDir...
                </text>
            </switch>
        </g>
        <path d="M 1753.33 720 L 1808.23 794.86" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1811.34 799.1 L 1804.38 795.52 L 1808.23 794.86 L 1810.02 791.38 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1480" y="520" width="400" height="200" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 527px; margin-left: 1482px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                enum
                                <b>
                                    CommittedEntrySet
                                </b>
                                &lt;K, V&gt; {
                                <br/>
                                RMemLog( ReadonlyMemLog&lt;K,V&gt; ),
                                <br/>
                                SSTable( SSTable&lt;K,V&gt; ),
                                <br/>
                                }
                                <br/>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + load(CommittedEntrySetInfo) -&gt; Res&lt;Self&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + get_one(&amp;Q) -&gt; Opt&lt;Entry&lt;K, OptDat&lt;V&gt;&gt;&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + get_range(Opt&lt;&amp;Q&gt;, Opt&lt;&amp;Q&gt;) -&gt; Iter&lt;Entry&lt;K, OptDat&lt;V&gt;&gt;&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + info() -&gt; &amp;CommittedEntrySetInfo
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1482" y="539" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    enum CommittedEntrySet&lt;K, V&gt; {...
                </text>
            </switch>
        </g>
        <rect x="2680" y="400" width="360" height="160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 362px; height: 160px; padding-top: 400px; margin-left: 2680px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 360px; height: 160px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        CommittedEntrySetInfo
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + commit_info: CommitInfo
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        + entryset_dir: EntrySetDir
                                        <br/>
                                    </span>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + cmp(&amp;self, &amp;other):
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    asc commit_info
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2680" y="412" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    CommittedEntrySetInfo...
                </text>
            </switch>
        </g>
        <path d="M 3208.24 400 L 3203.53 360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3199.56 360.47 L 3204.46 367.95 L 3207.5 359.53" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 3300 400 L 3332 360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3332.62 365.62 L 3326.38 360.62" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="3080" y="400" width="280" height="200" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 282px; height: 200px; padding-top: 400px; margin-left: 3080px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 280px; height: 200px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        CommitInfo : Serializable
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + commit_ver_hi_incl: CommitVer
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + commit_ver_lo_incl: CommitVer
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <span>
                                        + timestamp: Timestamp
                                        <br/>
                                    </span>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + cmp(&amp;self, &amp;other):
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    asc commit_ver_hi_incl, asc timestamp_id
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + ser&lt;W&gt;(&amp;mut W) -&gt; Res&lt;()&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + deser&lt;R&gt;(&amp;mut R) -&gt; Res&lt;Self&gt;
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3080" y="412" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    CommitInfo : Serializable...
                </text>
            </switch>
        </g>
        <path d="M 247.27 1640 L 238.18 1600" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 243.86 1606.91 L 236.05 1608.69 M 234.28 1600.89 L 239.95 1607.8 L 242.08 1599.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 640 1933.33 L 680 1930" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 640 2018.18 L 680 2025.45" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 408.28 2280 L 452.41 2440" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <rect x="0" y="1640" width="640" height="640" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 642px; height: 640px; padding-top: 1640px; margin-left: 0px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 640px; height: 640px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        Txn&lt;'txn&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - db: &amp;'txn DB
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - scnd_idxs_guard: RwLockReadGuard&lt;'txn, HashMap&lt;_,_&gt;&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - dependent_itvs_prim: IntervalSet&lt;&amp;'txn PK&gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - dependent_itvs_scnds: HashMap&lt; Arc&lt;SVSpec&gt;, IntervalSet&lt;&amp;'txn SV&gt; &gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - written_prim: Opt&lt; WritableMemLog&lt;PKShared, PVShared&gt; &gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - written_scnds: HashMap&lt; Arc&lt;SVSpec&gt;, WritableMemLog&lt;SVPKShared, PVShared&gt; &gt;
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - gap_ver_lo: CommitVer
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    // Lower inclusive bound during conflict checks.
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - snap_ver_ceil: CommitVer
                                </p>
                                <p style="margin: 0px ; margin-left: 4px">
                                    // Upper exclusive bound.
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    - new(&amp;'txn DB) -&gt; Txn&lt;'txn&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + close(self, Res&lt;CbRetOk&gt;) -&gt; CloseResult&lt;CbRetOk&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    // Take ownership of self.
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + run(
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    &amp;'txn DB,
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    cb: FnOnce(Txn&lt;'txn&gt;) -&gt; CloseResult&lt;CbRetOk&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    ) -&gt; CloseResult&lt;CbRetOK&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    // This fn constructs Txn and passes it to cb. Cb must call `txn.close()`.
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    // This pattern enforces RAII on `Txn`.
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + get_pk_one(&amp;'txn PK) -&gt; Res&lt;Opt&lt;(PKShared, PVShared)&gt;&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + get_pk_range(
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    Opt&lt;&amp;'txn PK&gt;,
                                    <span>
                                        Opt&lt;&amp;'txn PK&gt;,
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    cb: FnMut(Iter&lt;Entry&lt;PKShared, PVShared&gt;&gt;) -&gt; CbRet
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    )
                                    <span>
                                        -&gt; CbRet
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + get_sv_range(
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    &amp;SVSpec,
                                    <span>
                                        Opt&lt;&amp;'txn SV&gt;,
                                    </span>
                                    <span>
                                        Opt&lt;&amp;'txn SV&gt;,
                                    </span>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    cb: FnMut(Iter&lt;Entry&lt;SVPKShared, PVShared&gt;&gt;) -&gt; Res&lt;CbRetOk&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    ) -&gt; Res&lt;CbRetOk&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + put(PKShared, Opt&lt;PVShared&gt;) -&gt; Res&lt;()&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + try_commit() -&gt; Res&lt;CommitResult&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    - update_snapshot_gap() -&gt; ()
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    - has_conflict() -&gt; Res&lt;bool&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    - do_commit() -&gt; Res&lt;()&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    + clear() -&gt; Res&lt;()&gt;
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="0" y="1652" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    Txn&lt;'txn&gt;...
                </text>
            </switch>
        </g>
        <rect x="3640" y="40" width="480" height="400" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 47px; margin-left: 3642px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <b>
                                        File paths
                                    </b>
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    <ul>
                                        <li>
                                            db_root/
                                        </li>
                                        <ul>
                                            <li>
                                                prim_lsm/
                                            </li>
                                            <ul>
                                                <li>
                                                    &lt;anti_collision_num&gt;/    (one entryset)
                                                </li>
                                                <ul>
                                                    <li>
                                                        either memlog.kv or sstable.kv
                                                    </li>
                                                    <li>
                                                        commit_info.datum (present iff committed)
                                                    </li>
                                                </ul>
                                                <li>
                                                    <span>
                                                        (... other entrysets)
                                                    </span>
                                                    <br/>
                                                </li>
                                            </ul>
                                            <li>
                                                <span>
                                                    scnd_idxs/
                                                </span>
                                                <br/>
                                            </li>
                                            <ul>
                                                <li>
                                                    <span>
                                                        &lt;anti_collision_num&gt;/    (one scnd idx)
                                                    </span>
                                                </li>
                                                <ul>
                                                    <li>
                                                        <span>
                                                            spec.datum
                                                        </span>
                                                    </li>
                                                    <li>
                                                        <span>
                                                            lsm/
                                                        </span>
                                                    </li>
                                                    <ul>
                                                        <li>
                                                            &lt;anti_collision_num&gt;/    (one entryset)
                                                        </li>
                                                        <ul>
                                                            <li>
                                                                either memlog.kv or sstable.kv
                                                            </li>
                                                            <li>
                                                                commit_info.datum (present iff committed)
                                                            </li>
                                                        </ul>
                                                        <li>
                                                            <span>
                                                                (... other entrysets)
                                                            </span>
                                                        </li>
                                                    </ul>
                                                </ul>
                                                <li>
                                                    <span>
                                                        (... other secondary indexes)
                                                    </span>
                                                    <br/>
                                                </li>
                                            </ul>
                                        </ul>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3642" y="59" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    File paths...
                </text>
            </switch>
        </g>
        <rect x="3160" y="300" width="80" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 82px; height: 60px; padding-top: 300px; margin-left: 3160px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 80px; height: 60px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        CommitVer
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + u64
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3160" y="312" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    CommitVer...
                </text>
            </switch>
        </g>
        <rect x="3280" y="240" width="200" height="120" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 202px; height: 120px; padding-top: 240px; margin-left: 3280px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 200px; height: 120px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        Timestamp
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + u64
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    + inc_from(Iter&lt;Self&gt;) -&gt; Self
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3280" y="252" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    Timestamp...
                </text>
            </switch>
        </g>
        <path d="M 2040 990 L 2074.3 1007.15" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2079 1009.5 L 2071.17 1009.5 L 2074.3 1007.15 L 2074.3 1003.24 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1760" y="800" width="280" height="240" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 278px; height: 1px; padding-top: 807px; margin-left: 1762px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                fn
                                <b>
                                    merge_committed_entrysets
                                </b>
                                (
                                <br/>
                                Iter&lt;&amp;CommittedEntrySet&lt;K, V&gt;&gt;,
                                <br/>
                                k_lo: Opt&lt;&amp;Q&gt;,
                                <br/>
                                k_hi: Opt&lt;&amp;Q&gt;,
                                <br/>
                                ) -&gt; Iter&lt;Entry&lt;K, OptDat&lt;V&gt;&gt;&gt;
                                <br/>
                                <br/>
                                fn
                                <b>
                                    merge_txnlocal_and_committed_entrysets
                                </b>
                                (
                                <br/>
                                Opt&lt;&amp;WritableMemLog&lt;K, V&gt;&gt;,
                                <br/>
                                Iter&lt;&amp;CommittedEntrySet&lt;K, V&gt;&gt;,
                                <br/>
                                k_lo: Opt&lt;&amp;Q&gt;,
                                <br/>
                                k_hi: Opt&lt;&amp;Q&gt;,
                                <br/>
                                ) -&gt; Iter&lt;Entry&lt;K, OptDat&lt;V&gt;&gt;&gt;
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1762" y="819" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    fn merge_committed_entrysets(...
                </text>
            </switch>
        </g>
        <rect x="760" y="0" width="80" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 82px; height: 60px; padding-top: 0px; margin-left: 760px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 80px; height: 60px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        ListVer
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    + u64
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="760" y="12" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    ListVer...
                </text>
            </switch>
        </g>
        <rect x="1560" y="1280" width="320" height="120" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 322px; height: 120px; padding-top: 1280px; margin-left: 1560px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 320px; height: 120px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        SendPtr&lt;T&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - *const T
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px 0px 0px 4px">
                                    unsafe impl&lt;T&gt; Send for SendPtr&lt;T&gt; {}
                                </p>
                                <p style="margin: 0px 0px 0px 4px">
                                    unsafe impl&lt;T&gt; Sync for SendPtr&lt;T&gt; {}
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1560" y="1292" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    SendPtr&lt;T&gt;...
                </text>
            </switch>
        </g>
        <rect x="680" y="1880" width="120" height="90" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 122px; height: 90px; padding-top: 1880px; margin-left: 680px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 120px; height: 90px; overflow: hidden;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;">
                                <p style="margin: 0px ; margin-top: 4px ; text-align: center">
                                    <b>
                                        CloseResult&lt;T&gt;
                                    </b>
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    - Result&lt;T&gt;
                                </p>
                                <hr size="1"/>
                                <p style="margin: 0px ; margin-left: 4px">
                                    <br/>
                                </p>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="680" y="1892" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    CloseResult&lt;T&gt;...
                </text>
            </switch>
        </g>
        <rect x="680" y="2000" width="160" height="80" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 158px; height: 1px; padding-top: 2007px; margin-left: 682px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                enum
                                <b>
                                    CommitResult
                                </b>
                                {
                                <br/>
                                Conflict,
                                <br/>
                                Success,
                                <br/>
                                }
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="682" y="2019" fill="#000000" font-family="Helvetica" font-size="12px">
                    enum CommitResult {...
                </text>
            </switch>
        </g>
        <rect x="1000" y="2120" width="560" height="1080" rx="11.2" ry="11.2" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 2127px; margin-left: 1002px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    /*
                                </div>
                                <div>
                                    This is a simplistic query engine. Each "get" statement requires exactly one index to run on. A "select where" statement depends on exactly one secondary index, and if a matching one is not found, then the statement fails.
                                </div>
                                <div>
                                    */
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    Txn::get_pk_one(pk) -&gt; Res&lt;Opt&lt;(PKShared, PVShared)&gt;&gt;
                                </div>
                                <div>
                                    <b>
                                        dependent_itvs_prim
                                    </b>
                                    .add( {lo=pk, hi=pk} );
                                </div>
                                <div>
                                    return prim_lsm.
                                    <font color="#990099">
                                        get_one
                                    </font>
                                    (
                                </div>
                                <div>
                                    <b>
                                        written_prim
                                    </b>
                                    ,
                                </div>
                                <div>
                                    Some(
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    ), None,
                                </div>
                                <div>
                                    pk,
                                </div>
                                <div>
                                    || db.
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    (),
                                </div>
                                <div>
                                    );
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    Txn::get_pk_range(pk_lo, pk_hi, handle_entries) -&gt; CbRet
                                </div>
                                <div>
                                    <b>
                                        dependent_itvs_prim
                                    </b>
                                    .add( {lo=pk_lo, hi=pk_hi} );
                                </div>
                                <div>
                                    return prim_lsm.
                                    <font color="#990099">
                                        get_range
                                    </font>
                                    (
                                </div>
                                <div>
                                    <b>
                                        written_prim
                                    </b>
                                    ,
                                </div>
                                <div>
                                    Some(
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    ), None,
                                </div>
                                <div>
                                    pk_lo, pk_hi,
                                </div>
                                <div>
                                    handle_entries,
                                </div>
                                <div>
                                    || db.
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    (),
                                </div>
                                <div>
                                    );
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    Txn::get_sv_range(spec, sv_lo, sv_hi, handle_entries) -&gt; Res&lt;CbRetOk&gt;
                                </div>
                                <div>
                                    scnd_idx =
                                    <b>
                                        scnd_idxs_guard
                                    </b>
                                    .get(spec);
                                </div>
                                <div>
                                    if (no such scnd_idx) or (scnd_idx.
                                    <font color="#009999">
                                        is_built
                                    </font>
                                    .load() != true):
                                </div>
                                <div>
                                    return error;
                                </div>
                                <div>
                                </div>
                                <div>
                                    dependent_itvs_scnd =
                                    <b>
                                        dependent_itvs_scnds
                                    </b>
                                    .get(spec);
                                </div>
                                <div>
                                    if no such itvset:
                                </div>
                                <div>
                                    create new empty itvset and insert into dict;
                                </div>
                                <div>
                                    dependent_itvs_scnd.add( {lo=sv_lo, hi=sv_hi} );
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    written_scnd =
                                    <b>
                                        written_scnds
                                    </b>
                                    .get(spec);
                                </div>
                                <div>
                                    // written_scnd may be None.
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    return scnd_idx.lsm.
                                    <font color="#990099">
                                        get_range
                                    </font>
                                    (
                                </div>
                                <div>
                                    written_scnd,
                                </div>
                                <div>
                                    Some(
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    ), None,
                                </div>
                                <div>
                                    sv_lo, sv_hi,
                                </div>
                                <div>
                                    handle_entries,
                                </div>
                                <div>
                                    || db.
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    (),
                                </div>
                                <div>
                                    );
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    Txn::put(pk: PKShared, new_pv: Opt&lt;PVShared&gt;) -&gt; Res&lt;()&gt;
                                </div>
                                <div>
                                    if written_prim is None:
                                </div>
                                <div>
                                    <b>
                                        written_prim
                                    </b>
                                    = Some( prim_lsm.create_writable_entryset() );
                                </div>
                                <div>
                                    for (spec, scnd_idx) in
                                    <b>
                                        scnd_idxs_guard
                                    </b>
                                    :
                                </div>
                                <div>
                                    written_scnd = Some( scnd_idx.lsm.create_writable_entryset() );
                                </div>
                                <div>
                                    insert written_scnd to
                                    <b>
                                        written_scnds
                                    </b>
                                    ;
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    old_pv: Opt&lt;PVShared&gt; = prim_lsm.
                                    <font color="#990099">
                                        get_one
                                    </font>
                                    (
                                </div>
                                <div>
                                    <b>
                                        written_prim
                                    </b>
                                    ,
                                </div>
                                <div>
                                    Some(
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    ), None,
                                </div>
                                <div>
                                    pk,
                                </div>
                                <div>
                                    || db.
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    (),
                                </div>
                                <div>
                                    );
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    for every (spec, written_scnd) in
                                    <b>
                                        written_scnds
                                    </b>
                                    :
                                </div>
                                <div>
                                    old_sv: Option&lt;SVShared&gt; = old_pv.flat_map(spec.extract);
                                </div>
                                <div>
                                    new_sv: Option&lt;SVShared&gt; = new_sv.flat_map(spec.extract);
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    if old_sv != new_sv:
                                </div>
                                <div>
                                    if let Some(old_sv) = old_sv:
                                </div>
                                <div>
                                    written_scnd.put( SVPKShared{old_sv, pk}, Tombstone );
                                </div>
                                <div>
                                    if let Some(new_sv) = new_sv:
                                </div>
                                <div>
                                    written_scnd.put( SVPKShared{new_sv, pk}, OptDat::Some(new_pv) );
                                </div>
                                <div>
                                </div>
                                <div>
                                    <b>
                                        written_prim
                                    </b>
                                    .put(pk, new_pv);
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1002" y="2139" fill="#000000" font-family="Helvetica" font-size="12px">
                    /*...
                </text>
            </switch>
        </g>
        <path d="M 480 2640 L 480 2673.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 480 2678.88 L 476.5 2671.88 L 480 2673.63 L 483.5 2671.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="200" y="2440" width="560" height="200" rx="4" ry="4" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <rect x="202" y="2442" width="556" height="196" rx="3.92" ry="3.92" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 554px; height: 1px; padding-top: 2449px; margin-left: 204px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <div>
                                        Txn::run(
                                    </div>
                                    <div>
                                        db: &amp;'txn DB,
                                    </div>
                                    <div>
                                        cb: FnOnce(Txn&lt;'txn&gt;) -&gt; CloseResult&lt;CbRetOk&gt;
                                    </div>
                                    <div>
                                        ) -&gt; CloseResult&lt;CbRetOk&gt;
                                    </div>
                                    <div>
                                        if
                                        <font color="#ff6666">
                                            is_terminating
                                        </font>
                                        .load() == true:
                                    </div>
                                    <div>
                                        return error;
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        txn = Txn::new(db);
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        return cb(txn);
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="204" y="2461" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    Txn::run(...
                </text>
            </switch>
        </g>
        <rect x="200" y="2680" width="560" height="240" rx="4.8" ry="4.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 2687px; margin-left: 202px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    Txn::new(db: &amp;'txn DB) -&gt; Txn&lt;'txn&gt;
                                </div>
                                <div>
                                    <b>
                                        scnd_idxs_guard
                                    </b>
                                    = db.
                                    <font color="#3399ff">
                                        scnd_idxs
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        lock_shared
                                    </span>
                                    ();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    <b>
                                        dependent_itvs_prim
                                    </b>
                                    = new empty IntervalSet;
                                </div>
                                <div>
                                    <b>
                                        dependent_itvs_scnds
                                    </b>
                                    = new empty dict;
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    <b>
                                        written_prim
                                    </b>
                                    = None;
                                </div>
                                <div>
                                    <b>
                                        written_scnds
                                    </b>
                                    = new empty dict;
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    <b>
                                        gap_ver_lo
                                    </b>
                                    = CommitVer::default();    // The initial value doesn't matter.
                                </div>
                                <div>
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    =
                                    <font color="#00994d">
                                        commit_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        hold_leading
                                    </span>
                                    ();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    return Self{ ... };
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="202" y="2699" fill="#000000" font-family="Helvetica" font-size="12px">
                    Txn::new(db: &amp;'txn DB) -&gt; Txn&lt;'txn&gt;...
                </text>
            </switch>
        </g>
        <rect x="200" y="2960" width="560" height="240" rx="4.8" ry="4.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 2967px; margin-left: 202px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    Txn::close(Res&lt;CbRetOk&gt;) -&gt; CloseResult&lt;CbRetOk&gt;
                                </div>
                                <div>
                                    <font color="#00994d">
                                        commit_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        unhold
                                    </span>
                                    (
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    , || db.
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    ());
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    for written in
                                    <b>
                                        written_prim
                                    </b>
                                    and in
                                    <b>
                                        written_scnds
                                    </b>
                                    :
                                </div>
                                <div>
                                    /*
                                </div>
                                <div>
                                    These `written`s could be:
                                </div>
                                <div>
                                    - empty entryset that was skipped during committing.
                                </div>
                                <div>
                                    - abandoned by client txn logic.
                                </div>
                                <div>
                                    */
                                </div>
                                <div>
                                    rm -r written.entryset_dir;
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    return /* wrap user-provided Res into CloseResult */
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="202" y="2979" fill="#000000" font-family="Helvetica" font-size="12px">
                    Txn::close(Res&lt;CbRetOk&gt;) -&gt; CloseResult&lt;CbRetOk&gt;...
                </text>
            </switch>
        </g>
        <path d="M 1160 3634.67 L 1193.8 3626.78" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1198.91 3625.59 L 1192.89 3630.59 L 1193.8 3626.78 L 1191.3 3623.77 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 1160 3746.9 L 1193.72 3752.55" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1198.9 3753.42 L 1191.42 3755.71 L 1193.72 3752.55 L 1192.57 3748.81 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 880 3920 L 880 3953.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 880 3958.88 L 876.5 3951.88 L 880 3953.63 L 883.5 3951.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="600" y="3480" width="560" height="440" rx="8.8" ry="8.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 3487px; margin-left: 602px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    Txn::try_commit() -&gt; Res&lt;CommitResult&gt;
                                </div>
                                <div>
                                    if
                                    <b>
                                        written_prim
                                    </b>
                                    is None:
                                </div>
                                <div>
                                    return "success";
                                </div>
                                <div>
                                </div>
                                <div>
                                    <font color="#00994d">
                                        update_snapshot_gap
                                    </font>
                                    ();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    loop:
                                </div>
                                <div>
                                    loop:
                                </div>
                                <div>
                                    if
                                    <b>
                                        gap_ver_lo
                                    </b>
                                    ==
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    :
                                </div>
                                <div>
                                    break;
                                </div>
                                <div>
                                </div>
                                <div>
                                    has_conflict = has_conflict();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    <font color="#00994d">
                                        update_snapshot_gap
                                    </font>
                                    ();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    if has_conflict:
                                </div>
                                <div>
                                    return "conflict";
                                </div>
                                <div>
                                </div>
                                <div>
                                    with
                                    <font color="#0000ff">
                                        commit_mutex
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        lock
                                    </span>
                                    ():
                                </div>
                                <div>
                                    <font color="#00994d">
                                        update_snapshot_gap
                                    </font>
                                    ();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    if
                                    <b>
                                        gap_ver_lo
                                    </b>
                                    !=
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    :
                                </div>
                                <div>
                                    continue;
                                </div>
                                <div>
                                </div>
                                <div>
                                    do_commit();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    return "success";
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="602" y="3499" fill="#000000" font-family="Helvetica" font-size="12px">
                    Txn::try_commit() -&gt; Res&lt;CommitResult&gt;...
                </text>
            </switch>
        </g>
        <path d="M 1160 4098.67 L 1193.65 4100.91" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1198.88 4101.26 L 1191.67 4104.29 L 1193.65 4100.91 L 1192.13 4097.3 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="600" y="3960" width="560" height="240" rx="4.8" ry="4.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 3967px; margin-left: 602px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    /* Push to all SIs, including build-in-progress SIs.
                                    <span>
                                        */
                                    </span>
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    Txn::do_commit() -&gt; Res&lt;()&gt;
                                </div>
                                <div>
                                    for each (spec, written_scnd) in
                                    <b>
                                        written_scnds
                                    </b>
                                    :
                                </div>
                                <div>
                                    if written_scnd is not empty:
                                </div>
                                <div>
                                    scnd_idx =
                                    <b>
                                        scnd_idxs_guard
                                    </b>
                                    .get(spec);
                                </div>
                                <div>
                                    scnd_idx.lsm.commit(written_scnd,
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    );
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    <b>
                                        prim_lsm
                                    </b>
                                    .commit(written_prim.take(),
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    );
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    <font color="#00994d">
                                        commit_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        get_and_inc_leading
                                    </span>
                                    ();
                                </div>
                                <div>
                                    db.
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    ();
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="602" y="3979" fill="#000000" font-family="Helvetica" font-size="12px">
                    /* Push to all SIs, including build-in-progress SIs. */...
                </text>
            </switch>
        </g>
        <rect x="280" y="3400" width="240" height="120" rx="8.4" ry="8.4" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 238px; height: 1px; padding-top: 3407px; margin-left: 282px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    Txn::clear() -&gt; Res&lt;()&gt;
                                </div>
                                <div>
                                    clear each
                                    <b>
                                        dependent_itvs_*
                                    </b>
                                    ;
                                </div>
                                <div>
                                    clear each
                                    <b>
                                        written_*
                                    </b>
                                    ;
                                </div>
                                <div>
                                    <font color="#00994d">
                                        update_snapshot_gap
                                    </font>
                                    ();
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="282" y="3419" fill="#000000" font-family="Helvetica" font-size="12px">
                    Txn::clear() -&gt; Res&lt;()&gt;...
                </text>
            </switch>
        </g>
        <rect x="1200" y="3960" width="560" height="320" rx="6.4" ry="6.4" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 3967px; margin-left: 1202px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    LSMTree::commit(w_memlog: WritableMemLog&lt;K,V&gt;, commit_ver: CommitVer) -&gt; Res&lt;()&gt;
                                </div>
                                <div>
                                    r_memlog = ReadOnlyMemlog::from(w_memlog, commit_ver);
                                </div>
                                <div>
                                    elem = ...;
                                </div>
                                <div>
                                    list.push_newest(elem);
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    ReadonlyMemLog::from(w_memlog: WritableMemLog&lt;K,V&gt;, commit_ver: CommitVer) -&gt; Res&lt;Self&gt;
                                </div>
                                <div>
                                    // There are no new dirs or files to create.
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    let commit_info = CommitInfo {
                                </div>
                                <div>
                                    lo = commit_ver,
                                </div>
                                <div>
                                    hi = commit_ver,
                                </div>
                                <div>
                                    timestamp = 0,
                                </div>
                                <div>
                                    };
                                </div>
                                <div>
                                    serialize CommitInfo to disk;
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    Self { ... std::move() properties from WritableMemLog ... }
                                </div>
                                <div>
                                    <br/>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1202" y="3979" fill="#000000" font-family="Helvetica" font-size="12px">
                    LSMTree::commit(w_memlog: WritableMemLog&lt;K,V&gt;, commit_ver: CommitVer) -&gt; Res&lt;()&gt;...
                </text>
            </switch>
        </g>
        <rect x="1200" y="3480" width="560" height="160" rx="3.2" ry="3.2" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 3487px; margin-left: 1202px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    Txn::
                                    <font color="#00994d">
                                        update_snapshot_gap
                                    </font>
                                    () -&gt; ()
                                </div>
                                <div>
                                    <b>
                                        gap_ver_lo
                                    </b>
                                    =
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    ;
                                </div>
                                <div>
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    =
                                    <font color="#00994d">
                                        commit_ver_state
                                    </font>
                                    .
                                    <span style="background-color: rgb(255 , 204 , 153)">
                                        hold_leaning_and_unhold
                                    </span>
                                    (
                                </div>
                                <div>
                                    <b>
                                        gap_ver_lo
                                    </b>
                                    ,
                                </div>
                                <div>
                                    || db.
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    ()
                                </div>
                                <div>
                                    );
                                </div>
                                <div>
                                    <br/>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1202" y="3499" fill="#000000" font-family="Helvetica" font-size="12px">
                    Txn::update_snapshot_gap() -&gt; ()...
                </text>
            </switch>
        </g>
        <path d="M 1760 3800.03 L 1793.63 3799.98" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 1798.88 3799.97 L 1791.89 3803.48 L 1793.63 3799.98 L 1791.88 3796.48 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="1200" y="3681" width="560" height="239" rx="4.78" ry="4.78" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 3688px; margin-left: 1202px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    Txn::has_conflict() -&gt; Res&lt;bool&gt;
                                </div>
                                <div>
                                    if has_conflict_in_one_lsm(
                                    <b>
                                        dependent_itvs_prim
                                    </b>
                                    , prim_lsm):
                                </div>
                                <div>
                                    return "conflict";
                                </div>
                                <div>
                                    for (spec, itvset) in
                                    <b>
                                        dependent_itvs_scnds
                                    </b>
                                    :
                                </div>
                                <div>
                                    scnd_idx =
                                    <b>
                                        scnd_idxs_guard
                                    </b>
                                    .get(spec);
                                </div>
                                <div>
                                    if has_conflict_in_one_lsm(itvset, scnd_idx.lsm):
                                </div>
                                <div>
                                    return "conflict";
                                </div>
                                <div>
                                    return "no conflict";
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    /*
                                </div>
                                <div>
                                    For secondaries, conflict :=
                                </div>
                                <div>
                                    putting, by another txn, of any SVPK having any SV on which our txn is dependent.
                                </div>
                                <div>
                                    */
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1202" y="3700" fill="#000000" font-family="Helvetica" font-size="12px">
                    Txn::has_conflict() -&gt; Res&lt;bool&gt;...
                </text>
            </switch>
        </g>
        <rect x="1800" y="3680" width="560" height="239" rx="4.78" ry="4.78" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 3687px; margin-left: 1802px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    Txn::has_conflict_in_one_lsm(itvset, lsm) -&gt; Res&lt;bool&gt;
                                </div>
                                <div>
                                    if itvset is empty:
                                </div>
                                <div>
                                    return "no conflict";
                                </div>
                                <div>
                                    itvset.merge();
                                </div>
                                <div>
                                    return lsm.
                                    <font color="#990099">
                                        iter_entrysets
                                    </font>
                                    (
                                </div>
                                <div>
                                    Some(
                                    <b>
                                        snap_ver_ceil
                                    </b>
                                    ), Some(
                                    <b>
                                        gap_ver_lo
                                    </b>
                                    ),
                                </div>
                                <div>
                                    |entrysets| {
                                </div>
                                <div>
                                    <span>
                                        entries = entryset.get_whole_range();
                                    </span>
                                </div>
                                <div>
                                    if itvset.overlaps_with(entries):
                                </div>
                                <div>
                                    return "conflict";
                                </div>
                                <div>
                                    return "no conflict";
                                </div>
                                <div>
                                    },
                                </div>
                                <div>
                                    || db.
                                    <font color="#990000">
                                        send_job_cv
                                    </font>
                                    (),
                                </div>
                                <div>
                                    );
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="1802" y="3699" fill="#000000" font-family="Helvetica" font-size="12px">
                    Txn::has_conflict_in_one_lsm(itvset, lsm) -&gt; Res&lt;bool&gt;...
                </text>
            </switch>
        </g>
        <rect x="470" y="1520" width="360" height="80" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1527px; margin-left: 472px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;">
                                trait TryPartialOrd&lt;O&gt;:
                                <br/>
                                fn try_partial_cmp(&amp;self, &amp;O) -&gt; Result&lt;Option&lt;Ordering&gt;&gt;
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="472" y="1539" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    trait TryPartialOrd&lt;O&gt;:...
                </text>
            </switch>
        </g>
        <path d="M 2560 1676.84 L 2628.65 1682.62" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2633.89 1683.06 L 2626.62 1685.96 L 2628.65 1682.62 L 2627.2 1678.99 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2160" y="1480" width="400" height="360" rx="10.8" ry="10.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <rect x="2162" y="1482" width="396" height="356" rx="10.68" ry="10.68" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 394px; height: 1px; padding-top: 1489px; margin-left: 2164px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <div>
                                        DB::run_gc_job():
                                    </div>
                                    <div>
                                        <font color="#990000">
                                            job_cv_rx
                                        </font>
                                        =
                                        <font color="#990000">
                                            job_cv_tx
                                        </font>
                                        .subscribe();
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        loop:
                                    </div>
                                    <div>
                                        if
                                        <font color="#ff6666">
                                            is_terminating
                                        </font>
                                        .load() == true:
                                    </div>
                                    <div>
                                        break;
                                    </div>
                                    <div>
                                    </div>
                                    <div>
                                        on_loop(prim_lsm);
                                    </div>
                                    <div>
                                        with
                                        <font color="#3399ff">
                                            scnd_idxs
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            shared_lock
                                        </span>
                                        ():
                                    </div>
                                    <div>
                                        for each scnd_idx:
                                    </div>
                                    <div>
                                        on_loop(scnd_idx);
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        <font color="#990000">
                                            job_cv_rx
                                        </font>
                                        .changed();    // Wait for notification
                                    </div>
                                    <div>
                                    </div>
                                    <div>
                                        on_termination(prim_lsm);
                                    </div>
                                    <div>
                                        with
                                        <font color="#3399ff">
                                            scnd_idxs
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            shared_lock
                                        </span>
                                        ():
                                    </div>
                                    <div>
                                        for each scnd_idx:
                                    </div>
                                    <div>
                                        on_termination(scnd_idx);
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2164" y="1501" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    DB::run_gc_job():...
                </text>
            </switch>
        </g>
        <path d="M 3035 1686.67 L 3113.65 1681.42" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3118.88 1681.07 L 3112.13 1685.03 L 3113.65 1681.42 L 3111.67 1678.05 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2836.94 1840 L 2837.97 1913.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2838.04 1918.88 L 2834.44 1911.93 L 2837.97 1913.63 L 2841.44 1911.83 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2635" y="1560" width="400" height="280" rx="8.4" ry="8.4" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 398px; height: 1px; padding-top: 1567px; margin-left: 2637px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    DB::on_loop(&amp;LSMTree&lt;K, V&gt;) -&gt; Res&lt;()&gt;
                                </div>
                                <div>
                                    lsm.delete_dangling_slices();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    let min_separate_commit_ver =
                                    <font color="#00994d">
                                        commit_ver_state
                                    </font>
                                    .trailing();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    lsm.modify_linked_list(min_separate_commit_ver);
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    lsm.delete_dangling_slices();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    DB::on_termination(&amp;LSMTree&lt;K, V&gt;) -&gt; Res&lt;()&gt;
                                </div>
                                <div>
                                    loop:
                                </div>
                                <div>
                                    lsm.delete_dangling_slices();
                                </div>
                                <div>
                                    if lsm.
                                    <font color="#ff99ff">
                                        dangling_slices
                                    </font>
                                    not empty:
                                </div>
                                <div>
                                    break;
                                </div>
                                <div>
                                    else:
                                </div>
                                <div>
                                    job_cv_rx.changed();    // Wait for notification
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2637" y="1579" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    DB::on_loop(&amp;LSMTree&lt;K, V&gt;) -&gt; Res&lt;()&gt;...
                </text>
            </switch>
        </g>
        <rect x="3120" y="1600" width="480" height="130" rx="3.9" ry="3.9" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 1607px; margin-left: 3122px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        LSMTree::delete_dangling_slices() -&gt; Res&lt;()&gt;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        min_used_list_ver =
                                        <font color="#990099">
                                            list_ver_state
                                        </font>
                                        .trailing();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        while
                                        <font color="#ff99ff">
                                            dangling_slices
                                        </font>
                                        .peek() is not None and has list_ver &lt; min_used_list_ver:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        slice =
                                        <font color="#ff99ff">
                                            danlgling_slices
                                        </font>
                                        .pop();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        slice.drop_dirs_and_memory();
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3122" y="1619" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree::delete_dangling_slices() -&gt; Res&lt;()&gt;...
                </text>
            </switch>
        </g>
        <path d="M 2767.59 2200 L 2729.13 2274.34" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2726.72 2279.01 L 2726.83 2271.18 L 2729.13 2274.34 L 2733.05 2274.4 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2912.41 2200 L 2950.87 2274.34" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2953.28 2279.01 L 2946.95 2274.4 L 2950.87 2274.34 L 2953.17 2271.18 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2600" y="1920" width="480" height="280" rx="8.4" ry="8.4" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 1927px; margin-left: 2602px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        LSMTree::modify_linked_list(min_separate_commit_ver: CommitVer) -&gt; Res&lt;()&gt;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K = new non-terminus dummy;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K = list.push_newest(K);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        J = K.older.load();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        flush_each_separate_memlog(min_separate_commit_ver, &amp;mut K, &amp;mut J);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        compact_memlogs(&amp;mut K, &amp;mut J);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        /*
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        Compacting SSTables may be less urgent than flushing Memtables.
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        For now, always proceed to sstables.
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        */
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if should_work_on_sstables:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        skip_separate_sstables(min_separate_commit_ver, &amp;mut K, &amp;mut J);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        compact_entrysets(&amp;mut K, &amp;mut J);
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2602" y="1939" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree::modify_linked_list(min_separate_commit_ver: CommitVer) -&gt; Res&lt;()&gt;...
                </text>
            </switch>
        </g>
        <path d="M 2720 3000 L 2757.15 3074.3" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2759.5 3079 L 2753.24 3074.3 L 2757.15 3074.3 L 2759.5 3071.17 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2800 3000 L 3114.22 3145.02" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3118.98 3147.22 L 3111.16 3147.47 L 3114.22 3145.02 L 3114.1 3141.11 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2412.26 3000 L 2386 3074" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2384.24 3078.95 L 2383.29 3071.18 L 2386 3074 L 2389.88 3073.52 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2280" y="2280" width="520" height="720" rx="15.6" ry="15.6" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 518px; height: 1px; padding-top: 2287px; margin-left: 2282px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        LSMTree::flush_each_separate_memlog(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        min_separate_commit_ver: CommitVer,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        J: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; Res&lt;()&gt;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        loop:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        cut_nonterminus_dummies(*K, J);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if J is ReadonlyMemLog with commit_ver_hi_incl &gt;= min_separate_commit_ver:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        G = J.older.load();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        slice = vec![J];
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        skip_tombstones = (G == &amp;list.dummy_oldest);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        flushed_sstable = compact(slice, skip_tombstones);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        replace_slice(K, J, *J, G, flushed_sstable);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        else:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        break;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <div>
                                        LSMTree::compact_memlogs(
                                    </div>
                                    <div>
                                        K: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </div>
                                    <div>
                                        J: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </div>
                                    <div>
                                        ) -&gt; Res&lt;()&gt;
                                    </div>
                                    <div>
                                        H = *K;
                                    </div>
                                    <div>
                                        G = *J;
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        slice = vec![];
                                    </div>
                                    <div>
                                        loop:
                                    </div>
                                    <div>
                                        cut_nonterminus_dummies(H, &amp;mut G);
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        if G is ReadonlyMemLog:
                                    </div>
                                    <div>
                                        slice.push(G);
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        H = G;
                                    </div>
                                    <div>
                                        G = H.older.load();
                                    </div>
                                    <div>
                                        else:
                                    </div>
                                    <div>
                                        break;
                                    </div>
                                    <div>
                                    </div>
                                    <div>
                                        if slice.len() &gt; 0:
                                    </div>
                                    <div>
                                        skip_tombstones = (G == &amp;list.dummy_oldest);
                                    </div>
                                    <div>
                                        compacted_sstable = compact(slice, skip_tombstones);
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        replace_slice(K, J, H, G, compacted_sstable);
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2282" y="2299" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree::flush_each_separate_memlog(...
                </text>
            </switch>
        </g>
        <path d="M 2960 3000 L 2931.34 3057.32 C 2927.85 3055.57 2925.17 3060.94 2928.66 3062.68 L 2928.66 3062.68 L 2922.85 3074.3" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2920.5 3079 L 2920.5 3071.17 L 2922.85 3074.3 L 2926.76 3074.3 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 3248 3000 L 3270.17 3073.9" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3271.68 3078.93 L 3266.31 3073.23 L 3270.17 3073.9 L 3273.02 3071.22 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 2880 3000 L 2842.84 3017.25 C 2841.2 3013.72 2835.76 3016.24 2837.4 3019.78 L 2837.4 3019.78 L 2752.87 3059.03 C 2751.22 3055.49 2745.78 3058.02 2747.42 3061.55 L 2747.42 3061.55 L 2565.78 3145.89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2561.01 3148.1 L 2565.89 3141.98 L 2565.78 3145.89 L 2568.84 3148.33 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2880" y="2280" width="520" height="720" rx="15.6" ry="15.6" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 518px; height: 1px; padding-top: 2287px; margin-left: 2882px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        LSMTree::skip_separate_sstables(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        min_separate_commit_ver: CommitVer,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        J: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; ()
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        loop:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        cut_nonterminus_dummies(*K, J);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if J is SSTable with commit_ver_hi_incl &gt;= min_separate_commit_ver:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K = J;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        J = J.older.load();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        else:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        break;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <div>
                                        LSMTree::compact_entrysets(
                                    </div>
                                    <div>
                                        K: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </div>
                                    <div>
                                        J: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </div>
                                    <div>
                                        ) -&gt; Res&lt;()&gt;
                                    </div>
                                    <div>
                                        H = *K;
                                    </div>
                                    <div>
                                        G = *J;
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        slice = vec![];
                                    </div>
                                    <div>
                                        loop:
                                    </div>
                                    <div>
                                        cut_nonterminus_dummies(H, &amp;mut G);
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        if G is a CommittedEntrySet:
                                    </div>
                                    <div>
                                        slice.push(G);
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        H = G;
                                    </div>
                                    <div>
                                        G = G.older.load();
                                    </div>
                                    <div>
                                        else:
                                    </div>
                                    <div>
                                        break;
                                    </div>
                                    <div>
                                    </div>
                                    <div>
                                        if slice.len() &gt; 1:
                                    </div>
                                    <div>
                                        skip_tombstones = (G == &amp;list.dummy_oldest);
                                    </div>
                                    <div>
                                        compacted_sstable = compact(slice, skip_tombstones);
                                    </div>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        replace_slice(K, J, H, G, compacted_sstable);
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2882" y="2299" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree::skip_separate_sstables(...
                </text>
            </switch>
        </g>
        <path d="M 2960 3400 L 3016.18 3474.91" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3019.33 3479.11 L 3012.33 3475.61 L 3016.18 3474.91 L 3017.93 3471.41 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2640" y="3080" width="400" height="320" rx="9.6" ry="9.6" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 398px; height: 1px; padding-top: 3087px; margin-left: 2642px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        LSMTree::cut_nonterminus_dummies(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K: SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        J: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; ()
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        H = K;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        G = *J;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        while G is a non-terminus dummy:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        H = G;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        G = G.older.load();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if G != *J:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K.older.store(G);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        save_dangling_slice(*J, H);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        *J = G;
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2642" y="3099" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree::cut_nonterminus_dummies(...
                </text>
            </switch>
        </g>
        <path d="M 3200 3400 L 3143.82 3474.91" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3140.67 3479.11 L 3142.07 3471.41 L 3143.82 3474.91 L 3147.67 3475.61 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="3120" y="3080" width="400" height="320" rx="9.6" ry="9.6" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 398px; height: 1px; padding-top: 3087px; margin-left: 3122px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        LSMTree::replace_slice(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        J: &amp;mut SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        H: SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        G: SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        sstable: SSTable&lt;K, V&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; ()
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        R = ListNode {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        elem: ListElem::Elem(CommittedEntrySet::SSTable(sstable)),
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        older: G
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        };
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        K.older.store(R);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        save_dangling_slice(*J, H);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        *K = R;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        *J = G;
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3122" y="3099" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree::replace_slice(...
                </text>
            </switch>
        </g>
        <rect x="2880" y="3480" width="400" height="160" rx="4.8" ry="4.8" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 398px; height: 1px; padding-top: 3487px; margin-left: 2882px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        LSMTree::save_dangling_slice(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        J: SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        H: SendPtr&lt;ListNode&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; ()
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        penult_list_ver =
                                        <font color="#990099">
                                            list_ver_state
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            get_and_inc_leading
                                        </span>
                                        ();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        dangl_slice = { penult_list_ver, J, H };
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <font color="#ff99ff">
                                            dangling_slices
                                        </font>
                                        .push(dangl_slice);
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2882" y="3499" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree::save_dangling_slice(...
                </text>
            </switch>
        </g>
        <path d="M 3200 1960 L 3360 1960 L 3360 2250 L 3300 2250 L 3280 2280 L 3280 2250 L 3200 2250 Z" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(90,3280,2120)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 287px; height: 1px; padding-top: 2047px; margin-left: 3153px;">
                        <div data-drawio-colors="color: #000000; background-color: #FFFFFF; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: normal; overflow-wrap: normal;">
                                <span>
                                    Legend:
                                    <br/>
                                    <br/>
                                    "slice" = the slice to replace or delete
                                    <br/>
                                    <br/>
                                    K := the node immediately newer than the slice.
                                </span>
                                <br/>
                                <span>
                                    J := the newest node included in the slice.
                                </span>
                                <br/>
                                <span>
                                    H := the oldest node included in the slice.
                                </span>
                                <br/>
                                <span>
                                    G := the node immediate older than the slice.
                                    <br/>
                                    <div>
                                        <br/>
                                    </div>
                                    <div>
                                        R := the node to replace the slice with
                                    </div>
                                </span>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3153" y="2059" fill="#000000" font-family="Helvetica" font-size="12px">
                    Legend:...
                </text>
            </switch>
        </g>
        <rect x="2080" y="3080" width="480" height="360" rx="10.8" ry="10.8" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 3087px; margin-left: 2082px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        LSMTree::compact(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        slice: Vec&lt;&amp;CommittedEntrySet&lt;K, V&gt;&gt;,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        skip_tombstones: bool,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; Res&lt;SSTable&lt;K, V&gt;&gt;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        entryset_info = CommittedEntrySetInfo {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        commit_info: CommitInfo {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        commit_ver_hi_incl: slice[0].commit_ver_hi_incl
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        commit_ver_lo_incl: slice[-1].commit_ver_lo_incl
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        timestamp: max(ts for ts in slice) + 1
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        }
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        entryset_dir = lsm.format_new_entryset_dir_path();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        };
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        entries = merging::merge_committed_entrysets(slice, k_lo=None, k_hi=None)
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        .filter(|entry| {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if skip_tombstones:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        skip OptDatum::Tombstone.
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        })
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        sstable = SSTable::new(entries, entryset_info);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        return sstable;
                                    </span>
                                </div>
                                <div>
                                    <br/>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2082" y="3099" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    LSMTree::compact(...
                </text>
            </switch>
        </g>
        <path d="M 4280 2432.41 L 4354.12 2401.75" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 4358.97 2399.74 L 4353.84 2405.65 L 4354.12 2401.75 L 4351.16 2399.18 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 4280 2584.83 L 4353.72 2597.54" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 4358.9 2598.43 L 4351.41 2600.69 L 4353.72 2597.54 L 4352.59 2593.79 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <path d="M 4280 2710.34 L 4411.52 2796.51" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 4415.91 2799.39 L 4408.13 2798.48 L 4411.52 2796.51 L 4411.97 2792.62 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="3760" y="2120" width="520" height="840" rx="10.4" ry="10.4" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <rect x="3762" y="2122" width="516" height="836" rx="10.32" ry="10.32" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 514px; height: 1px; padding-top: 2129px; margin-left: 3764px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span>
                                        fn create_scnd_idx(db: &amp;DB, spec: Arc&lt;SVSpec&gt;) -&gt; Res&lt;...&gt;
                                    </span>
                                    <br/>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        with scnd_idxs_guard =
                                        <font color="#3399ff">
                                            scnd_idxs
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            lock_shared
                                        </span>
                                        ():
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if scnd_idxs_guard.has_key(spec):
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        return "already exists";
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        with scnd_idxs_guard =
                                        <font color="#3399ff">
                                            scnd_idxs
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            lock_exclusive
                                        </span>
                                        ():
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if scnd_idxs_guard.has_key(spec):
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        return "already exists";
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx_dir = db.format_new_scnd_idx_dir_path();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx = new empty SecondaryIndex with {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        lsm: empty LSMTree
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <font color="#009999">
                                            is_built
                                        </font>
                                        : AtomicBool::new(false)
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        };
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        /* Create a terminus dummy node in order to prevent the GC job from
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        traversing older than there. */
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <b>
                                            out_of_scope_node
                                        </b>
                                        = scnd_idx.lsm().push(new dummy w/
                                        <u>
                                            is_terminus
                                        </u>
                                        =true);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idxs_guard.insert(spec, scnd_idx);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <div>
                                        <span style="font-size: 12px">
                                            /* Get the current leading commit ver, but don't `hold()` it.
                                        </span>
                                    </div>
                                    <div>
                                        <span style="font-size: 12px">
                                            It's possible for this job to redundantly work on (commit vers &gt;= job_ver_ceil),
                                        </span>
                                    </div>
                                    <div>
                                        <span style="font-size: 12px">
                                            but it's better than blocking (commit vers &gt;= job_ver_ceil) from
                                        </span>
                                    </div>
                                    <div>
                                        <span style="font-size: 12px">
                                            being merged by the GC job. */
                                        </span>
                                    </div>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <b>
                                            job_ver_ceil
                                        </b>
                                        =
                                        <font color="#00994d">
                                            commit_ver_state
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            leading
                                        </span>
                                        ();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        with scnd_idxs_guard =
                                        <font color="#3399ff">
                                            scnd_idxs
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            lock_shared
                                        </span>
                                        ():
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx = scnd_idxs_guard.get(spec);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        /* This dict.get() is expected to always succeed, because
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd idx deletion should abort if is_built == false. */
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        entryset_info = CommittedEntrySetInfo {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        commit_info: CommitInfo {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        commit_ver_hi_incl: 0,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        commit_ver_lo_incl: 0,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        timestamp: 0,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        },
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        entryset_dir: scnd_idx.lsm.format_new_entryset_dir_path(),
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        };
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        sstable = do_build(...);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if sstable.is_empty():
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <b>
                                            out_of_scope_node
                                        </b>
                                        .
                                        <u>
                                            is_terminus
                                        </u>
                                        .store(false);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        sstable.remove_entryset_dir();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        else:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        swap_in(...);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <b>
                                            out_of_scope_node
                                        </b>
                                        .
                                        <u>
                                            is_terminus
                                        </u>
                                        .store(false);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        wait_till_readable(...);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx.
                                        <font color="#009999">
                                            is_built
                                        </font>
                                        .store(true);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        db.
                                        <font color="#990000">
                                            send_job_cv
                                        </font>
                                        ();
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3764" y="2141" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    fn create_scnd_idx(db: &amp;DB, spec: Arc&lt;SVSpec&gt;) -&gt; Res&lt;...&gt;...
                </text>
            </switch>
        </g>
        <rect x="4360" y="2120" width="480" height="360" rx="7.2" ry="7.2" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 2127px; margin-left: 4362px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        fn do_build(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        db,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        job_ver_ceil,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        spec,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        entryset_info,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; Res&lt;SSTable&gt;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        sstable = db.prim_lsm.
                                        <font color="#990099">
                                            get_range
                                        </font>
                                        (
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        WritableMemLog: None,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        commit_ver_hi_excl: Some(
                                        <b>
                                            job_ver_ceil
                                        </b>
                                        ), commit_ver_lo_incl: None,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        k_lo: None, k_hi: None,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        |prim_entries| {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_entries = /*
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        Filter entry
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        1) by non-tombstone
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        2) by spec.extract(pv) being Some
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        Map entry to (SVPKShared, PVShared).
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        */
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        return SSTable::new(scnd_entries, entryset_info)
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        },
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        || db.
                                        <font color="#990000">
                                            send_job_cv
                                        </font>
                                        (),
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        );
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        return sstable
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="4362" y="2139" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    fn do_build(...
                </text>
            </switch>
        </g>
        <rect x="4360" y="2520" width="480" height="240" rx="4.8" ry="4.8" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 2527px; margin-left: 4362px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        fn swap_in(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        sstable,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        out_of_scope_node,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; ()
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        A = ListNode {
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        elem: ListElem::Elem(CommittedEntrySet::SSTable(sstable)),
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        older: scnd_idx.lsm.dummy_oldest,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        };
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <b>
                                            out_of_scope_node
                                        </b>
                                        .older.store(A);
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="4362" y="2539" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    fn swap_in(...
                </text>
            </switch>
        </g>
        <rect x="4360" y="2800" width="480" height="240" rx="4.8" ry="4.8" fill="rgb(255, 255, 255)" stroke="#000000" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 478px; height: 1px; padding-top: 2807px; margin-left: 4362px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        fn wait_till_readable(
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        db,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        job_ver_ceil,
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        ) -&gt; ()
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <font color="#990000">
                                            job_cv_rx
                                        </font>
                                        = db.
                                        <font color="#990000">
                                            job_cv_tx
                                        </font>
                                        .subscribe();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        loop:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        min_separate_commit_ver =
                                        <font color="#00994d">
                                            commit_ver_state
                                        </font>
                                        .trailing();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if
                                        <b>
                                            job_ver_ceil
                                        </b>
                                        &lt;= min_separate_commit_ver:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        break;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        else:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <font color="#990000">
                                            job_cv_rx
                                        </font>
                                        .changed();    // Wait for notification
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="4362" y="2819" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    fn wait_till_readable(...
                </text>
            </switch>
        </g>
        <path d="M 3760 1661.97 L 3606.37 1663.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 3601.12 1663.17 L 3608.09 1659.62 L 3606.37 1663.13 L 3608.14 1666.62 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="3760" y="1480" width="520" height="360" rx="7.2" ry="7.2" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <rect x="3762" y="1482" width="516" height="356" rx="7.12" ry="7.12" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 514px; height: 1px; padding-top: 1489px; margin-left: 3764px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span style="font-size: 12px">
                                        fn delete_scnd_idx(&amp;DB, &amp;SVSpec) -&gt; Res&lt;...&gt;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        with scnd_idxs_guard =
                                        <font color="#3399ff">
                                            scnd_idxs
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            lock_shared
                                        </span>
                                        ():
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx = scnd_idxs_guard.get(spec);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if (no such scnd_idx) or (scnd_idx.
                                        <font color="#009999">
                                            is_built
                                        </font>
                                        .load() == false):
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        return error;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        with scnd_idxs_guard =
                                        <font color="#3399ff">
                                            scnd_idxs
                                        </font>
                                        .
                                        <span style="background-color: rgb(255 , 204 , 153)">
                                            lock_exclusive
                                        </span>
                                        ():
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx = scnd_idxs_guard.get(spec);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if (no such scnd_idx) or (scnd_idx.
                                        <font color="#009999">
                                            is_built
                                        </font>
                                        .load() == false):
                                    </span>
                                </div>
                                <div>
                                    return error;
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx = scnd_idxs_guard.remove(spec);
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        /* This call removes entryset dirs. Call it before the larger-scope `rm -r` below. */
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        scnd_idx.lsm.delete_dangling_slices();
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        rm -r scnd_idx dir;
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        if scnd_idx.lsm.
                                        <font color="#ff99ff">
                                            dangling_slices
                                        </font>
                                        is not empty:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        return "Unable to delete all dangling slices. Memory leak!";
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        else:
                                    </span>
                                </div>
                                <div>
                                    <span style="font-size: 12px">
                                        return "success";
                                    </span>
                                </div>
                                <div>
                                    <br/>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="3764" y="1501" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    fn delete_scnd_idx(&amp;DB, &amp;SVSpec) -&gt; Res&lt;...&gt;...
                </text>
            </switch>
        </g>
        <path d="M 873.13 3280 L 996.51 3091.99" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 999.39 3087.6 L 998.47 3095.37 L 996.51 3091.99 L 992.62 3091.53 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 3183px; margin-left: 937px;">
                        <div data-drawio-colors="color: #000000; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                1
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="937" y="3186" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    1
                </text>
            </switch>
        </g>
        <path d="M 825.45 3280 L 692.78 3203.19" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 688.24 3200.56 L 696.05 3201.04 L 692.78 3203.19 L 692.54 3207.1 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 3240px; margin-left: 756px;">
                        <div data-drawio-colors="color: #000000; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                4
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="756" y="3243" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    4
                </text>
            </switch>
        </g>
        <path d="M 861 3320 L 868.68 3473.64" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 868.94 3478.88 L 865.1 3472.07 L 868.68 3473.64 L 872.09 3471.72 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 3400px; margin-left: 865px;">
                        <div data-drawio-colors="color: #000000; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                (optional) 2
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="865" y="3403" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    (optional) 2
                </text>
            </switch>
        </g>
        <path d="M 802.5 3320 L 526.01 3416.17" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 521.06 3417.89 L 526.52 3412.29 L 526.01 3416.17 L 528.82 3418.9 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 3369px; margin-left: 661px;">
                        <div data-drawio-colors="color: #000000; background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">
                                (optional) 3
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="661" y="3372" fill="#000000" font-family="Helvetica" font-size="11px" text-anchor="middle">
                    (optional) 3
                </text>
            </switch>
        </g>
        <rect x="800" y="3280" width="120" height="40" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 3300px; margin-left: 801px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: center;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                callback:
                                <br/>
                                FnOnce(Txn)
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="860" y="3304" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">
                    callback:...
                </text>
            </switch>
        </g>
        <path d="M 2890.91 1320 L 2893.97 1353.66" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/>
        <path d="M 2894.44 1358.89 L 2890.32 1352.23 L 2893.97 1353.66 L 2897.3 1351.6 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/>
        <rect x="2720" y="1080" width="320" height="240" rx="9.6" ry="9.6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <rect x="2722" y="1082" width="316" height="236" rx="9.44" ry="9.44" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 314px; height: 1px; padding-top: 1089px; margin-left: 2724px;">
                        <div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    <span>
                                        main():
                                    </span>
                                    <br/>
                                </div>
                                <div>
                                    (db, gc_job_fut) = DB::load_db_and_gc_job(...);
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    gc_job_task = spawn(gc_job_fut);
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    frontend_task = spawn(frontend(...));
                                </div>
                                <div>
                                    <span>
                                        /*
                                    </span>
                                    <span>
                                        frontend_task handles
                                    </span>
                                    <span>
                                        the shutdown signal. */
                                    </span>
                                    <br/>
                                </div>
                                <div>
                                    frontend_task.await;
                                    <span>
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <span>
                                        <br/>
                                    </span>
                                </div>
                                <div>
                                    <font color="#ff6666">
                                        is_terminating
                                    </font>
                                    .store(true);
                                </div>
                                <div>
                                    <font color="#990000">
                                        job_cv_tx
                                    </font>
                                    .send();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    gc_job_task.await;
                                </div>
                                <div>
                                    <br/>
                                    <br/>
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2724" y="1101" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">
                    main():...
                </text>
            </switch>
        </g>
        <rect x="2760" y="1360" width="280" height="120" rx="6" ry="6" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/>
        <g transform="translate(-0.5 -0.5)">
            <switch>
                <foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;">
                    <div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 278px; height: 1px; padding-top: 1367px; margin-left: 2762px;">
                        <div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left;">
                            <div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">
                                <div>
                                    DB::load_db_and_gc_job(PathBuf) -&gt;
                                </div>
                                <div>
                                    db = DB::load_or_new(...);
                                </div>
                                <div>
                                    db: Arc&lt;DB&gt; = Arc::new(db);
                                    <br/>
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    gc_job_fut = Arc::clone(&amp;db).run_gc_job();
                                </div>
                                <div>
                                    <br/>
                                </div>
                                <div>
                                    return (db, gc_job_fut);
                                </div>
                            </div>
                        </div>
                    </div>
                </foreignObject>
                <text x="2762" y="1379" fill="#000000" font-family="Helvetica" font-size="12px">
                    DB::load_db_and_gc_job(PathBuf) -&gt;...
                </text>
            </switch>
        </g>
    </g>
    <switch>
        <g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/>
        <a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank">
            <text text-anchor="middle" font-size="10px" x="50%" y="100%">
                Viewer does not support full SVG 1.1
            </text>
        </a>
    </switch>
</svg>