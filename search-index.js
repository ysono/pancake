var searchIndex = new Map(JSON.parse('[\
["examples_wasm_txn",{"doc":"","t":"CH","n":["utils","pkpv_to_string"],"q":[[0,"examples_wasm_txn"],[1,"examples_wasm_txn::utils"],[2,"alloc::string"],[3,"anyhow"]],"d":["",""],"i":[0,0],"f":[0,[[[2,[1]],[2,[1]]],[[4,[3,3]]]]],"c":[],"p":[[1,"u8"],[1,"slice"],[5,"String",2],[8,"Result",3]],"b":[]}],\
["pancake_engine_common",{"doc":"","t":"GPFPFFOCCCOOOCCOCOOCCCHHKMGPPNNNNNNNNNNNNNNNFSGFFPSPSCCOHHCHHOHOOHHHHHOSGPSPSNNNNHNNNNNNFFFNNNNNNONNNNNNNNNNNNNNNNNONONNNOONNNNNNNNNNNHHHHHHHHHFNNNNNNNNNONONNNFNNNNNNNONNONNNNNKHHMSFFFONNNNNNNNNNNNNNNNNNNNHONNNNONNNNNNNNNN","n":["Entry","Own","ReadonlyMemLog","Ref","SSTable","WritableMemLog","_phant","ds_n_a","entry","fs_utils","kv_file_path","log_path","log_writer","memlog_r","memlog_w","memtable","merging","r_memlog","sparse_file_offsets","sstable","bisect","cmp","bisect_left","bisect_right","TryPartialOrd","try_partial_cmp","Entry","Own","Ref","borrow","borrow_mut","convert","from","into","into_owned_k","into_owned_kv","into_owned_v","to_option_entry","try_borrow","try_borrow","try_from","try_into","try_partial_cmp","type_id","AntiCollisionParentDir","ENV_VAR_PARENT_DIR","EngineType","NamePattern","PathNameNum","SERIAL","SERIAL_DB_ROOT_NAME","SSI","SSI_DB_ROOT_NAME","administrative","anti_collision","child_name_pattern","create_dir_all","default_db_root_dir","functions","hard_link_file","lock_file","next_child_num","open_file","parent_dir_path","prefix","read_dir","remove_dir_all","remove_file","rename_file","seek","suffix","ENV_VAR_PARENT_DIR","EngineType","SERIAL","SERIAL_DB_ROOT_NAME","SSI","SSI_DB_ROOT_NAME","borrow","borrow_mut","clone","clone_into","default_db_root_dir","from","into","to_owned","try_from","try_into","type_id","AntiCollisionParentDir","NamePattern","PathNameNum","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","child_name_pattern","clone","clone_into","cmp","deref","eq","format","format_hex","format_new_child_path","from","from","from","from","into","into","into","load_or_new","new","next_child_num","parent_dir_path","parent_dir_path","parse","parse_hex","partial_cmp","prefix","suffix","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_partial_cmp","type_id","type_id","type_id","create_dir_all","hard_link_file","lock_file","open_file","read_dir","remove_dir_all","remove_file","rename_file","seek","ReadonlyMemLog","borrow","borrow_mut","from","from","get_one","get_range","get_whole_range","into","load","log_path","mem_len","memtable","try_from","try_into","type_id","WritableMemLog","borrow","borrow_mut","clear","flush","from","into","load_or_new","log_writer","put","r_memlog","r_memlog","set_log_writer","set_r_memlog","try_from","try_into","type_id","Mergeable","merge_differently_typed_entry_iters","merge_entry_iters","try_borrow","FILE_OFFSETS_SPARSENESS","FileOffset","SSTable","SparseFileOffsets","_phant","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref_mut","from","from","from","from","get_all_keys","get_one","get_range","into","into","into","is_kv_sparsely_captured","kv_file_path","load","nearest_preceding_file_offset","new","remove_file","sparse_file_offsets","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"pancake_engine_common"],[20,"pancake_engine_common::ds_n_a"],[22,"pancake_engine_common::ds_n_a::bisect"],[24,"pancake_engine_common::ds_n_a::cmp"],[26,"pancake_engine_common::entry"],[44,"pancake_engine_common::fs_utils"],[71,"pancake_engine_common::fs_utils::administrative"],[88,"pancake_engine_common::fs_utils::anti_collision"],[134,"pancake_engine_common::fs_utils::functions"],[143,"pancake_engine_common::memlog_r"],[159,"pancake_engine_common::memlog_w"],[176,"pancake_engine_common::merging"],[180,"pancake_engine_common::sstable"],[222,"core::ops::index"],[223,"core::cmp"],[224,"core::ops::function"],[225,"core::option"],[226,"core::result"],[227,"core::borrow"],[228,"core::convert"],[229,"anyhow"],[230,"core::clone"],[231,"pancake_types::serde::datum"],[232,"anyhow"],[233,"std::path"],[234,"core::convert"],[235,"std::fs"],[236,"std::io"],[237,"std::io"],[238,"core::ops::function"],[239,"pancake_types::types::serializable"],[240,"alloc::vec"],[241,"pancake_types::types::serializable"]],"d":["<code>Entry</code> is the API for the content of the DB.","","A MemLog is a sorted dictionary (called Memtable), backed …","","An SSTable is an abstraction of a sorted dictionary. An …","A MemLog is a sorted dictionary (called Memtable), backed …","","Data structures and algorithm.","","","","","","","","","","","","","","","","","","","<code>Entry</code> is the API for the content of the DB.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A filesystem directory that formats unique child paths, …","The parent of serial and ssi dirs.","","","A strictly increasing <code>u64</code> that is used to prevent file/dir …","","","","","","","","","","","","","","","","","","","","","","","The parent of serial and ssi dirs.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A filesystem directory that formats unique child paths, …","","A strictly increasing <code>u64</code> that is used to prevent file/dir …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A MemLog is a sorted dictionary (called Memtable), backed …","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","A MemLog is a sorted dictionary (called Memtable), backed …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","The caller is responsible for <code>Self::flush()</code>ing …","","","","","","","","","","K-merges and then dedupes the arg iters.","","The sparseness is exaggeratedly small, so as to be helpful …","","An SSTable is an abstraction of a sorted dictionary. An …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Bisect in the in-memory sparse index, to find the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,9,0,9,0,0,48,0,0,0,48,39,38,0,0,39,0,38,48,0,0,0,0,0,0,6,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,21,0,21,0,0,0,34,0,0,0,0,0,34,0,34,32,0,0,0,0,0,32,0,0,21,0,21,0,21,21,21,21,0,21,21,21,21,21,21,0,0,0,34,32,30,34,32,30,34,30,30,30,30,30,32,30,34,34,32,30,30,34,32,30,34,32,34,34,34,32,30,30,32,32,30,34,32,30,34,32,30,30,34,32,30,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,0,0,44,0,0,0,0,48,48,45,46,48,45,46,45,45,46,46,48,45,46,46,48,48,48,48,45,46,0,48,48,46,48,48,48,45,48,45,46,48,45,46,48,45,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-2,1,1,-3],1,[],[[3,[1],[[2,[-1]]]]],[[5,[-1],[[2,[4]]]]]],[[-2,1,1,-3],1,[],[[3,[1],[[2,[-1]]]]],[[5,[-1],[[2,[4]]]]]],0,[[6,-1],[[8,[[7,[4]],-2]]],[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-2,-4]]],[[9,[-1,-3]]],[],[[10,[-1]],[11,[-1]]],[],[[10,[-3]],[11,[-3]]]],[-1,-1,[]],[-1,-2,[],[]],[[[9,[-1,-2]]],[[12,[-1]]],13,[]],[[[9,[-1,-2]]],[[12,[[14,[-1,-2]]]]],13,13],[[[9,[-1,-2]]],[[12,[-2]]],[],13],[[[9,[-1,[15,[-2]]]]],[[7,[[9,[-1,-2]]]]],[],[]],[[[9,[-1,-2]]],[[8,[-1,16]]],[],[]],[[[9,[-1,-2]]],[[12,[[14,[-1,-2]]]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[9,[-2,-3]],-1],[[12,[[7,[4]],16]]],[],[[17,[-1]]],[]],[-1,18,[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[12,[14]]],[[20,[19]]]],[21,22],0,[[-1,-2],[[12,[14]]],[[20,[19]]],[[20,[19]]]],[-1,[[12,[23]]],[[20,[19]]]],0,[[-1,24],[[12,[23]]],[[20,[19]]]],0,0,[19,[[12,[[0,[[26,[],[[25,[[12,[22]]]]]]]]]]]],[-1,[[12,[14]]],[[20,[19]]]],[-1,[[12,[14]]],[[20,[19]]]],[[-1,-2],[[12,[14]]],[[20,[19]]],[[20,[19]]]],[[-1,27,-2],[[12,[28]]],29,[[20,[19]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[[-1,-2],14,[],[]],[21,22],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,18,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[30,30],[[-1,-2],14,[],[]],[[30,30],4],[30,-1,[]],[[30,30],31],[[32,30],33],[30,33],[34,22],[-1,-1,[]],[-1,-1,[]],[28,30],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,32,-2],[[12,[34]]],[[20,[19]]],[[35,[22,[12,[30]]],[[2,[[12,[14]]]]]]]],[[36,36],32],0,[34,22],0,[[32,36],[[12,[30]]]],[-1,[[12,[30]]],[[20,[36]]]],[[30,30],[[7,[4]]]],0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[-1,-2],[[8,[[7,[4]],37]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,[[12,[14]]],[[20,[19]]]],[[-1,-2],[[12,[14]]],[[20,[19]]],[[20,[19]]]],[-1,[[12,[23]]],[[20,[19]]]],[[-1,24],[[12,[23]]],[[20,[19]]]],[19,[[12,[[0,[[26,[],[[25,[[12,[22]]]]]]]]]]]],[-1,[[12,[14]]],[[20,[19]]]],[-1,[[12,[14]]],[[20,[19]]]],[[-1,-2],[[12,[14]]],[[20,[19]]],[[20,[19]]]],[[-1,27,-2],[[12,[28]]],29,[[20,[19]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1,-2]]],[[39,[-1,-2]]],[],[]],[-1,-1,[]],[[[39,[-2,-3]],-1],[[7,[[14,[-2,-3]]]]],40,[[10,[-1]],41,40],41],[[[39,[-2,-3]],[7,[-1]],[7,[-1]]],[[0,[[26,[],[[25,[[14,[-2,-3]]]]]]]]],[],[[17,[-1]],41,40],41],[[[39,[-1,-2]]],[[0,[[26,[],[[25,[[14,[-1,-2]]]]]]]]],[41,40],41],[-1,-2,[],[]],[-1,[[12,[[39,[-2,-3]]]]],[[20,[19]]],[41,40],41],0,[[[39,[-1,-2]]],1,[41,40],41],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1,-2]]],[[12,[14]]],[42,40],42],[[[38,[-1,-2]]],[[12,[14]]],[42,40],42],[-1,-1,[]],[-1,-2,[],[]],[-1,[[12,[[38,[-2,-3]]]]],[[20,[19]]],[42,40],42],0,[[[38,[-1,-2]],-1,-2],[[12,[14]]],[42,40],42],[[[38,[-1,-2]]],[[39,[-1,-2]]],[],[]],0,[[[38,[-1,-2]],[43,[23]]],[[38,[-1,-2]]],[],[]],[[[38,[-1,-2]],[39,[-1,-2]]],[[38,[-1,-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,18,[]],0,[[[7,[-3]],-4],[[0,[[26,[],[[25,[[9,[-1,-2]]]]]]]]],40,[],[[26,[],[[25,[[14,[-1,-2]]]]]]],[[26,[],[[25,[[9,[-1,-2]]]]]]]],[-4,[[0,[[26,[],[[25,[-2]]]]]]],40,[[44,[-1]]],[[26,[],[[25,[-2]]]]],[[26,[],[[25,[-3]]]]]],[44,[[8,[-1,16]]],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[[-1,-2],14,[],[]],[[[46,[-1]]],-2,[],[]],[[[46,[-1]]],-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[[47,[[14,[-1,45]]]]],[[46,[-1]]],[]],[-1,-1,[]],[[[48,[-1,-2]]],[[0,[[26,[],[[25,[[12,[-1]]]]]]]]],[41,40],41],[[[48,[-2,-3]],-1],[[7,[[12,[[14,[-2,-3]]]]]]],[],[[17,[-1]],41,40],41],[[[48,[-2,-3]],[7,[-1]],[7,[-1]]],[[0,[[26,[],[[25,[[12,[[14,[-2,-3]]]]]]]]]]],[],[[17,[-1]],41,40],41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,31],0,[-1,[[12,[[48,[-2,-3]]]]],[[20,[19]]],[41,40],41],[[[46,[-2]],[7,[-1]]],45,[],[[17,[-1]]]],[[-3,22],[[12,[[48,[-1,-2]]]]],[13,49,40],49,[[26,[],[[25,[[9,[-1,-2]]]]]]]],[[[48,[-1,-2]]],[[12,[14]]],[41,40],41],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]]],"c":[],"p":[[1,"usize"],[17,"Output"],[10,"Index",222],[6,"Ordering",223],[10,"Fn",224],[10,"TryPartialOrd",24],[6,"Option",225],[6,"Result",226],[6,"Entry",26],[10,"Borrow",227],[10,"Into",228],[8,"Result",229],[10,"Clone",230],[1,"tuple"],[6,"OptDatum",231],[5,"Error",229],[10,"PartialOrd",223],[5,"TypeId",232],[5,"Path",233],[10,"AsRef",228],[6,"EngineType",71],[5,"PathBuf",233],[5,"File",234],[5,"OpenOptions",234],[17,"Item"],[10,"Iterator",235],[6,"SeekFrom",236],[1,"u64"],[10,"Seek",236],[5,"PathNameNum",88],[1,"bool"],[5,"NamePattern",88],[5,"String",237],[5,"AntiCollisionParentDir",88],[10,"FnMut",224],[1,"str"],[6,"Infallible",228],[5,"WritableMemLog",159],[5,"ReadonlyMemLog",143],[10,"Ord",223],[10,"Deser",238],[10,"Serializable",238],[5,"BufWriter",239],[10,"Mergeable",176],[5,"FileOffset",180],[5,"SparseFileOffsets",180],[5,"Vec",240],[5,"SSTable",180],[10,"Ser",238]],"b":[[38,"impl-Mergeable%3CK%3E-for-Entry%3C\'_,+K,+V%3E"],[39,"impl-Entry%3C\'a,+K,+V%3E"]]}],\
["pancake_engine_serial",{"doc":"","t":"FOOCCOCOSFSOONNNNNNNNNNONONNNECCSFSNNNNNCNNNNNNOCNOONNNJJHHSSFNNONNNNONNNNNONNNN","n":["DB","_lock_dir","all_scnd_idxs_parent_dir","db","lsm","prim_lsm","scnd_idx","scnd_idxs","ALL_SCND_IDXS_PARENT_DIR_NAME","DB","PRIM_LSM_DIR_NAME","_lock_dir","all_scnd_idxs_parent_dir","borrow","borrow_mut","create_scnd_idx","delete_scnd_idx","from","get_pk_one","get_pk_range","get_sv_range","into","load_or_new","prim_lsm","put","scnd_idxs","try_from","try_into","type_id","LSMTree","lsm_tree","merging","LOG_FILE_NAME","LSMTree","SSTABLES_DIR_NAME","borrow","borrow_mut","compact_sstables","flush_memtable","from","gc","get_one","get_range","get_whole_range","into","load_or_new","maybe_run_gc","memlog","opers","put","sstables","sstables_dir","try_from","try_into","type_id","MEMTABLE_FLUSH_SIZE_THRESH","SSTABLE_COMPACT_COUNT_THRESH","merge_memlog_and_sstables","merge_sstables","LSM_DIR_NAME","SPEC_FILE_NAME","SecondaryIndex","borrow","borrow_mut","dir_path","from","get_range","into","load","lsm","lsm_dir_path","new","put","remove_dir","spec","spec","spec_file_path","try_from","try_into","type_id"],"q":[[0,"pancake_engine_serial"],[8,"pancake_engine_serial::db"],[29,"pancake_engine_serial::lsm"],[32,"pancake_engine_serial::lsm::lsm_tree"],[55,"pancake_engine_serial::lsm::lsm_tree::gc"],[57,"pancake_engine_serial::lsm::merging"],[59,"pancake_engine_serial::scnd_idx"],[80,"pancake_types::types::sv_spec"],[81,"alloc::sync"],[82,"anyhow"],[83,"pancake_types::types::pk"],[84,"pancake_types::types::pk"],[85,"pancake_engine_common::entry"],[86,"core::option"],[87,"core::iter::traits::iterator"],[88,"pancake_types::types::sv"],[89,"std::path"],[90,"core::convert"],[91,"core::result"],[92,"core::any"],[93,"pancake_types::types::serializable"],[94,"core::cmp"],[95,"core::clone"],[96,"core::borrow"],[97,"core::cmp"],[98,"pancake_engine_common::sstable"],[99,"pancake_types::types::serializable"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","An LSMTree is an abstraction of a sorted dictionary.","","","","For now, always compact all SSTables into one SSTable.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","From older to newer.","","","","","These thresholds are exaggeratedly small, so as to be …","","@arg sstables: From older to newer. (The <em>opposite</em> of the …","@arg sstables: From older to newer. (The <em>opposite</em> of the …","","","A secondary index is an abstraction of a sorted dictionary …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,1,1,0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,18,18,18,18,18,0,18,18,18,18,18,18,18,0,18,18,18,18,18,18,0,0,0,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,[3,[2]]],[[5,[4]]]],[[1,2],[[5,[4]]]],[-1,-1,[]],[[1,6],[[10,[[9,[7,8]]]]]],[[1,[10,[6]],[10,[6]]],[[0,[[12,[],[[11,[[9,[7,8]]]]]]]]]],[[1,2,[10,[13]],[10,[13]]],[[5,[[0,[[12,[],[[11,[[9,[7,8]]]]]]]]]]]],[-1,-2,[],[]],[-1,[[5,[1]]],[[15,[14]]]],0,[[1,7,[10,[8]]],[[5,[4]]]],0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[-1,-2]]],[[5,[4]]],[19,20,21],[]],[[[18,[-1,-2]]],[[5,[4]]],[19,20,21],[]],[-1,-1,[]],0,[[[18,[-2,-3]],-1],[[10,[[9,[-2,-3]]]]],20,[[22,[-1]],[23,[-1]],19,20,21],[]],[[[18,[-2,-3]],[10,[-1]],[10,[-1]]],[[0,[[12,[],[[11,[[9,[-2,-3]]]]]]]]],[],[[23,[-1]],19,20,21],[]],[[[18,[-1,-2]]],[[0,[[12,[],[[11,[[9,[-1,-2]]]]]]]]],[19,20,21],[]],[-1,-2,[],[]],[-1,[[5,[[18,[-2,-3]]]]],[[15,[14]]],[19,20,21],[]],[[[18,[-1,-2]]],[[5,[4]]],[19,20,21],[]],0,0,[[[18,[-1,-2]],-1,[10,[-2]]],[[5,[4]]],[19,20,21],[]],0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],0,0,[[[24,[-2,-3]],[26,[[25,[-2,-3]]]],[10,[-1]],[10,[-1]]],[[0,[[12,[],[[11,[[9,[-2,-3]]]]]]]]],[],[27,20,[23,[-1]]],27],[[[26,[[25,[-2,-3]]]],[10,[-1]],[10,[-1]]],[[0,[[12,[],[[11,[[5,[[4,[-2,-3]]]]]]]]]]],[],[27,20,[23,[-1]]],27],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[[28,[10,[13]],[10,[13]]],[[0,[[12,[],[[11,[[9,[7,8]]]]]]]]]],[-1,-2,[],[]],[-1,[[5,[28]]],[[15,[14]]]],0,[-1,29,[[15,[14]]]],[[-1,[3,[2]],[18,[7,8]]],[[5,[28]]],[[15,[14]]]],[[28,7,[10,[8]],[10,[8]]],[[5,[4]]]],[28,[[5,[4]]]],[28,[[3,[2]]]],0,[-1,29,[[15,[14]]]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]]],"c":[],"p":[[5,"DB",8],[5,"SubValueSpec",80],[5,"Arc",81],[1,"tuple"],[8,"Result",82],[5,"PrimaryKey",83],[8,"PKShared",83],[8,"PVShared",84],[6,"Entry",85],[6,"Option",86],[17,"Item"],[10,"Iterator",87],[5,"SubValue",88],[5,"Path",89],[10,"AsRef",90],[6,"Result",91],[5,"TypeId",92],[5,"LSMTree",32],[10,"Serializable",93],[10,"Ord",94],[10,"Clone",95],[10,"Borrow",96],[10,"PartialOrd",94],[5,"WritableMemLog",97],[5,"SSTable",98],[1,"slice"],[10,"Deser",93],[5,"SecondaryIndex",59],[5,"PathBuf",89]],"b":[]}],\
["pancake_engine_ssi",{"doc":"","t":"PPGPPFPPPGGFOCOCOOOOCOOCOOOCOOOOOOSFSSSNONNNNONNONNNONNONONONNNNNNNNNNNONONNNNCCPFPPPPGGNNNNNNNNNNNNNNNONNNOONNNNNNNNNNTFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOONCNNNNNNNNNNNCCCCCCFFFFONNNNNNNNNONNNNNNNOONNNNNNNNNNONONNNOOCNNNNNNNNNNNNFFFNNNNNNNNNNNNNONNNOOOONNNCNNNNNNNNNFNNONNNONNNNFNNNNNNONNNNNNNFFFFNNNNNNNNONNNNNNNNNNNNNONOOOOONONNNNNNNNNNNNOFFNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCCCGPPNNNNNNNNNNHHFFNNNNNNOONNNNNNNNNNNNNNNNOTFFFNNNNNNNNONNNNNNOOONNNNNNONONNNNNNNONONNONNNNNNNNNNNNNNNCCCCCTGFFTPFPSSNNNNNNNNNNNNNNNONONONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNFNNOONNNNNONONNNFNNONNNOONNNSSSSFNNNNNNNNNNNNNNNNNFNNNONNNNNONONNNCCCCFNNOOOCCNNCNOONNNNNGPPPNNNNNNNFPPGFPNNNNNNNNOOOCNNNOONNNNNNNOOONNNNNNNNNNNHHHHFFNNNNNONNNNNNNOONNNNNNNPPPFGEONNNNNNNCONNNNNNNNNNONNNOOCOONNOONNNNNNNOSFFNNNNNOONNNNNNNNNNNNNNPPGNNNNNNNNNNPFGPFFNNNNNNNNNOOOCOOOONNNNNNNNNNNNNNNNOOONNNNNNNNNNNOOOCCCNNNNNNNNNNNNNNPPGNNNNNNN","n":["Abort","Busy","ClientCommitDecision","Commit","CreationInProgress","DB","Existent","InternalError","InternalError","ScndIdxCreationJobErr","ScndIdxDeletionJobErr","Txn","_lock_dir","db","db","db_state","db_state","db_state_guard","dependent_itvs_prim","dependent_itvs_scnds","ds_n_a","fc_able_commit_vers_tx","is_terminating_tx","lsm","lsm_dir","lsm_state","min_held_list_ver_tx","opers","si_cr_dir","si_cr_mutex","snap","snap_list_ver","staging","is_readable","ALL_SCND_IDX_CREATION_JOBS_DIR_NAME","DB","FC_ABLE_COMMIT_VERS_CAPACITY","LSM_DIR_NAME","SCND_IDXS_STATE_FILE_NAME","_lock_dir","_lock_dir","borrow","borrow_mut","create_scnd_idx","db_state","db_state","delete_scnd_idx","fc_able_commit_vers_tx","fc_able_commit_vers_tx","from","into","is_terminating_tx","is_terminating_tx","load_or_new","lsm_dir","lsm_dir","lsm_state","lsm_state","min_held_list_ver_tx","min_held_list_ver_tx","notify_min_held_list_ver","set__lock_dir","set_db_state","set_fc_able_commit_vers_tx","set_is_terminating_tx","set_lsm_dir","set_lsm_state","set_min_held_list_ver_tx","set_si_cr_dir","set_si_cr_mutex","si_cr_dir","si_cr_dir","si_cr_mutex","si_cr_mutex","terminate","try_from","try_into","type_id","db_state","scnd_idxs_state","CreationInProgress","DbState","Deletable","DidDefineNew","DoesNotExist","Existent","ScndIdxNewDefnResult","ScndIdxRemovalResult","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_scnd_idx_be_removed","define_new_scnd_idx","from","from","from","get_scnd_idx_defn","into","into","into","is_terminating","load_or_new","remove_scnd_idx","scnd_idxs","scnd_idxs_state","scnd_idxs_state_file_path","set_scnd_idx_as_readable","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AT_EMPTY_DATASTORE","ScndIdxNum","ScndIdxState","ScndIdxsState","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deser","do_deser","do_deser","do_ser","do_ser","eq","eq","eq","fetch_inc","fmt","fmt","fmt","from","from","from","from","hash","into","into","into","is_readable","new_empty","next_scnd_idx_num","scnd_idx_num","scnd_idxs","ser","test","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","atomic_linked_list","interval_set","iterator_cache","multiset","ordered_dict","send_ptr","AtomicLinkedList","ListIterator","ListNode","ListSnapshot","_phant","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","elem","from","from","from","from","from_elems","head_node_ptr","head_ptr","head_ptr","head_ptr","into","into","into","into","into_iter","iter","new","new","new_unchecked","next","next","next_node","next_ptr","push_head_node_noncontested","set_head_node_ptr_noncontested","snap","tail_excl_ptr","tail_ptr","test","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Interval","IntervalSet","MergedIntervalSet","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","fmt","fmt","from","from","from","hi_incl","into","into","into","is_merged","itvs","itvset","lo_incl","merge","new","overlaps_with","test","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IteratorCache","borrow","borrow_mut","cache","from","into","iter","iter","new","try_from","try_into","type_id","Multiset","add","borrow","borrow_mut","contains","count","default","dict","from","into","len","remove","try_from","try_into","type_id","DictValue","Neighbors","OrderedDict","RemovalResult","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","dict","from","from","from","from","get","get_mut","get_neighbors","get_newest_key","insert","into","into","into","into","neighbors","new","newer","newer_k","newest_k","older","older_k","remove","removed_v","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","v","NonNullSendPtr","SendPtr","as_ptr","as_ptr","as_sendptr","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","from","from","from","from","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","entryset","lsm_dir","lsm_state","unit","entryset_committed","merging","CommittedEntrySet","RMemLog","SSTable","borrow","borrow_mut","from","get_all_keys","get_one","get_range","into","try_from","try_into","type_id","merge_committed_entrysets","merge_txnlocal_and_committed_entrysets","CIUD","LsmDir","borrow","borrow","borrow_mut","borrow_mut","cmp","collect_committed_unit_dirs","commit_info","dir","eq","format_new_unit_dir_path","from","from","into","into","load_committed_units","load_or_new","partial_cmp","try_from","try_from","try_into","try_into","try_partial_cmp","type_id","type_id","unit_dir","AT_BOOTUP","Boundary","ListVer","LsmState","advance_min_held_list_ver","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","boundaries","boundaries","boundaries_mut","bump_commit_ver","clone","clone_into","cmp","curr_commit_ver","curr_commit_ver","curr_commit_ver_hold_count","curr_list_ver","eq","fetch_inc_curr_list_ver","from","from","from","hash","held_list_vers","hold_and_unhold_list_ver","hold_count","hold_curr_commit_ver","hold_curr_list_ver","into","into","into","is_held_list_vers_empty","list","list","list_mut","min_held_list_ver","mut_inc","new","node_newer","partial_cmp","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_partial_cmp","type_id","type_id","type_id","unhold_commit_ver","unhold_commit_vers","unhold_list_ver","commit_info","unit_committed","unit_compacted","unit_dir","unit_staging","AT_EMPTY_DATASTORE","CommitDataType","CommitInfo","CommitVer","FOR_NEW_COMMIT_VER_INTERVAL","MemLog","ReplacementNum","SSTable","_IMPL_NUM_FromPrimitive_FOR_CommitDataType","_IMPL_NUM_ToPrimitive_FOR_CommitDataType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","commit_ver_hi_incl","commit_ver_hi_incl","commit_ver_lo_incl","commit_ver_lo_incl","data_type","data_type","deser","do_deser","do_ser","eq","eq","eq","eq","from","from","from","from","from_i64","from_u64","hash","into","into","into","into","max","new_inc","new_larger_than_all_of","partial_cmp","partial_cmp","replacement_num","replacement_num","ser","set_commit_ver_hi_incl","set_commit_ver_lo_incl","set_data_type","set_replacement_num","to_i64","to_owned","to_owned","to_u64","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_partial_cmp","try_partial_cmp","type_id","type_id","type_id","type_id","CommittedUnit","borrow","borrow_mut","commit_info","dir","from","from_compacted","from_staging","into","load","prim","remove_dir","scnds","try_from","try_into","type_id","CompactedUnit","borrow","borrow_mut","dir","from","into","new_empty","prim","scnds","try_from","try_into","type_id","COMMIT_INFO_FILE_NAME","PI_KV_FILE_NAME","SI_KV_FILE_NAME_EXT","SI_KV_FILE_NAME_PFX","UnitDir","borrow","borrow_mut","eq","format_commit_info_file_path","format_prim_file_path","format_scnd_file_path","from","from","into","list_scnd_file_paths","load_commit_info","parse_scnd_file_num","path","scnd_file_name_pattern","try_from","try_into","type_id","StagingUnit","borrow","borrow_mut","clear","dir","ensure_create_scnd","flush","from","into","new_empty","prim","remove_dir","scnds","try_from","try_into","type_id","fc","sicr","sidel","txn","FlushingAndCompactionWorker","borrow","borrow_mut","dangling_nodes","db","fc_able_commit_vers_rx","fc_compaction","fc_segm","flush_and_compact","from","gc","into","is_terminating_rx","min_held_list_ver_rx","poll_held_list_vers_then_gc","run","try_from","try_into","type_id","CompactionResult","Empty","NoChange","Some","borrow","borrow_mut","from","into","try_from","try_into","type_id","FCJob","NoOp","NotStraddlingNonHeld","SegmDefnResult","SegmParams","StraddlingNonHeld","activate_compaction_result","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","collect_segm_nodes","dangling_nodes","db","db_state_guard","derive","derive_commit_info","derive_kmerged_iter","do_flush_and_compact","first_commit_ver","first_node","flush_and_compact_one_segment","from","from","from","into","into","into","last_node","newer_node","older_commit_ver","potentially_create_compacted_unit","should_slice_be_compacted","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","derive_one_segment","get_probe_adjacent_boundaries","translate_boundaries_to_segm_params","walk_nonheld_boundaries","DanglingNodeSet","DanglingNodeSetsDeque","borrow","borrow","borrow_mut","borrow_mut","default","deque","from","from","gc","gc_all_nodes","gc_old_nodes","into","into","max_incl_traversable_list_ver","nodes","push_back","try_from","try_from","try_into","try_into","type_id","type_id","Busy","Existent","InternalError","ScndIdxCreationJob","ScndIdxCreationJobErr","ScndIdxCreationsDir","_si_cr_guard","borrow","borrow","borrow_mut","borrow_mut","create_all_intermediary_files","create_one_intermediary_file","create_unit","creation","db","derive_scnd_entries","fmt","fmt","from","from","from","from","from","into","into","job_dir","merge_intermediary_files","modify_lsm_state","new","output_commit_ver","output_node","paths","pre_output_commit_ver","prim_entryset_file_paths","remove_intermediary_files","run","si_num","sv_spec","to_string","try_from","try_from","try_into","try_into","type_id","type_id","is_readable","MEMTABLE_FLUSH_PERIOD_ITEM_COUNT","ScndIdxCreationJobDir","ScndIdxCreationsDir","borrow","borrow","borrow_mut","borrow_mut","create_new_job_dir","dir","dir","format_new_kv_file_path","from","from","into","into","load_or_new","new","remove_dir","try_from","try_from","try_into","try_into","type_id","type_id","CreationInProgress","InternalError","ScndIdxDeletionJobErr","borrow","borrow_mut","fmt","fmt","from","into","to_string","try_from","try_into","type_id","Abort","CachedSnap","ClientCommitDecision","Commit","Txn","TxnSnapIterator","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","close","commit_ver_hi_incl","commit_ver_lo_excl","commit_ver_lo_excl","conflict","db","db_state_guard","dependent_itvs_prim","dependent_itvs_scnds","do_commit","ensure_create_staging","from","from","from","from","get_pk_one","get_pk_range","get_sv_range","has_conflict","into","into","into","into","into_iter","iter","iter","iter","iter_reached_end","new","new","new","next","notify_fc_worker","put","put_scnd_stg_delta","reset","run","send_fc_able_commit_vers","send_updated_min_held_list_ver","snap","snap_list_ver","staging","state_transition_helpers","state_transitions","stmt","try_commit","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_snapshot_for_conflict_checking","Conflict","DidCommit","TryCommitResult","borrow","borrow_mut","from","into","try_from","try_into","type_id"],"q":[[0,"pancake_engine_ssi"],[33,"pancake_engine_ssi::ScndIdxCreationJobErr"],[34,"pancake_engine_ssi::db"],[78,"pancake_engine_ssi::db_state"],[80,"pancake_engine_ssi::db_state::db_state"],[119,"pancake_engine_ssi::db_state::scnd_idxs_state"],[171,"pancake_engine_ssi::ds_n_a"],[177,"pancake_engine_ssi::ds_n_a::atomic_linked_list"],[232,"pancake_engine_ssi::ds_n_a::interval_set"],[269,"pancake_engine_ssi::ds_n_a::iterator_cache"],[281,"pancake_engine_ssi::ds_n_a::multiset"],[296,"pancake_engine_ssi::ds_n_a::ordered_dict"],[344,"pancake_engine_ssi::ds_n_a::send_ptr"],[372,"pancake_engine_ssi::lsm"],[376,"pancake_engine_ssi::lsm::entryset"],[378,"pancake_engine_ssi::lsm::entryset::entryset_committed"],[391,"pancake_engine_ssi::lsm::entryset::merging"],[393,"pancake_engine_ssi::lsm::lsm_dir"],[420,"pancake_engine_ssi::lsm::lsm_state"],[479,"pancake_engine_ssi::lsm::unit"],[484,"pancake_engine_ssi::lsm::unit::commit_info"],[562,"pancake_engine_ssi::lsm::unit::unit_committed"],[578,"pancake_engine_ssi::lsm::unit::unit_compacted"],[590,"pancake_engine_ssi::lsm::unit::unit_dir"],[612,"pancake_engine_ssi::lsm::unit::unit_staging"],[628,"pancake_engine_ssi::opers"],[632,"pancake_engine_ssi::opers::fc"],[651,"pancake_engine_ssi::opers::fc::fc_compaction"],[662,"pancake_engine_ssi::opers::fc::fc_segm"],[706,"pancake_engine_ssi::opers::fc::fc_segm::derive"],[710,"pancake_engine_ssi::opers::fc::gc"],[734,"pancake_engine_ssi::opers::sicr"],[780,"pancake_engine_ssi::opers::sicr::ScndIdxCreationJobErr"],[781,"pancake_engine_ssi::opers::sicr::creation"],[782,"pancake_engine_ssi::opers::sicr::paths"],[805,"pancake_engine_ssi::opers::sidel"],[818,"pancake_engine_ssi::opers::txn"],[891,"pancake_engine_ssi::opers::txn::state_transitions"],[901,"std::fs"],[902,"pancake_types::types::sv_spec"],[903,"alloc::sync"],[904,"anyhow"],[905,"tokio::sync::rwlock"],[906,"tokio::sync::mpsc::bounded"],[907,"tokio::sync::watch"],[908,"std::path"],[909,"core::convert"],[910,"tokio::sync::mutex"],[911,"core::result"],[912,"core::any"],[913,"core::option"],[914,"std::collections::hash::map"],[915,"std::io::buffered::bufreader"],[916,"std::io"],[917,"std::io::buffered::bufwriter"],[918,"std::io"],[919,"core::fmt"],[920,"core::hash"],[921,"core::iter::traits::iterator"],[922,"alloc::boxed"],[923,"core::fmt"],[924,"pancake_engine_common::ds_n_a::cmp"],[925,"core::hash"],[926,"core::marker"],[927,"core::ptr::non_null"],[928,"pancake_engine_common::entry"],[929,"pancake_types::types::serializable"],[930,"core::borrow"],[931,"core::cmp"],[932,"core::cmp"],[933,"pancake_engine_common::fs_utils::anti_collision"],[934,"core::convert"],[935,"std::path"],[936,"pancake_types::types::pv"],[937,"pancake_types::serde::datum"],[938,"tokio::sync::mutex"],[939,"alloc::collections::btree::map"],[940,"anyhow"],[941,"pancake_types::types::pk"],[942,"pancake_types::types::pk"],[943,"tokio::sync::rwlock::read_guard"],[944,"core::ops::function"]],"d":["","","","","","","","","","","","","","","","","","","","","Data structures and algorithm.","","","","","","","","","","","","","","","","This capacity is exaggeratedly small, in order to observe …","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The relationship between any instance of <code>ListSnapshot</code> and …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","This field could be an <code>AtomicPtr&lt;ListNode&lt;T&gt;&gt;</code>, but in all …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Including head. Excluding tail.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","@return the post-removal count","","","","","","A structure that contains","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","A newtype of <code>NonNull</code> that’s <code>unsafe</code>ly marked as <code>Send</code> and …","A newtype of <code>*const T</code> that’s <code>unsafe</code>ly marked as <code>Send</code> and …","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","@arg entrysets: From newer to older. (Same as the …","@arg entrysets: From newer to older. (Same as the …","","","","","","","","Returns:","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns:","","Compare","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@return","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","@return","","","@return The curr_list_ver.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","From newer to older.","","","","@arg <code>committed_units</code>: From newer to older.","","","","","","","","","","","","","","@return Whether (the unholding caused a non-head boundary …","@return <code>CommitVer</code>s that are members of newly-found …","@return The updated min_held_list_ver, iff updated.","","","","","","","The disambiguator of key-value files on disk, as to …","","The commit version uniquely identifies every commitment as …","","","The ordered number that disambiguates 2+ <code>CommitInfo</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Cost:","Cost:","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Flushing+compaction was executed, and resulted in an empty …","Flushing+compaction would not have changed the given slice …","Flushing+compaction was executed, and resulted in one Unit …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","A struct that contains references that are used over the …","","","","","","","","","","","","","","","","","","","","","The newest commit ver included in the segment.","The newest node included in the segment.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The oldest node included in the segment.","The node immediately newer than the segment.","The commit ver immediately older than the segment.","","A given slice of Units should be compacted iff any of:","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The period is exaggeratedly small, so as to be helpful …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","A named <code>std::iter::TakeWhile</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The lifetime is marked as <code>&#39;static</code> for our convenience.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[119,6,0,119,10,0,6,6,10,0,0,0,1,0,112,0,1,112,112,112,0,1,1,0,1,1,1,0,1,1,112,112,112,122,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,24,0,24,25,24,25,0,0,8,25,24,8,25,24,8,8,8,25,24,8,8,25,24,8,8,8,8,8,8,8,8,25,24,8,25,24,8,25,24,29,0,0,0,29,26,30,29,26,30,29,26,29,26,30,26,30,26,30,29,26,30,29,29,26,30,29,29,26,30,29,29,26,30,26,30,30,26,30,30,0,29,26,29,26,30,29,26,30,29,26,30,0,0,0,0,0,0,0,0,0,0,46,43,40,45,46,43,40,45,46,40,43,43,40,45,46,40,40,45,40,45,43,40,45,46,46,45,43,46,45,46,43,46,46,40,40,40,46,45,0,43,40,45,46,43,40,45,46,43,40,45,46,0,0,0,48,51,49,48,51,49,48,48,49,48,51,49,48,49,51,49,48,48,48,51,49,48,48,51,0,51,49,48,51,49,48,51,49,48,0,54,54,54,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,123,59,61,62,123,59,61,62,59,123,59,61,62,59,59,59,59,59,123,59,61,62,62,59,61,123,59,61,123,59,62,123,59,61,62,123,59,61,62,123,59,61,62,123,0,0,64,44,44,64,44,64,44,64,44,64,44,44,64,64,44,44,64,44,64,44,64,44,64,44,64,44,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,0,0,0,0,17,72,17,72,72,17,72,17,72,17,17,72,17,72,17,17,72,17,72,17,72,72,17,72,72,20,0,0,0,18,80,18,20,80,18,20,18,18,18,18,20,20,20,18,18,18,18,20,18,80,18,20,20,18,18,80,18,18,80,18,20,18,18,18,18,18,20,18,80,20,20,80,18,20,80,18,20,20,80,18,20,18,18,18,0,0,0,0,0,11,0,0,0,84,86,0,86,0,0,11,84,86,85,11,84,86,85,11,84,11,84,11,84,85,85,85,85,85,85,85,85,85,11,84,86,85,11,84,86,85,86,86,11,11,84,86,85,84,11,84,11,84,85,85,85,85,85,85,85,86,11,84,86,11,84,86,85,11,84,86,85,11,84,11,84,86,85,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,89,89,89,89,89,89,89,89,89,89,89,0,0,0,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,14,14,14,14,14,0,0,14,14,0,14,14,14,14,14,14,14,14,0,97,97,97,97,97,97,97,97,97,97,0,98,98,0,0,98,95,95,98,96,95,98,96,95,95,95,95,0,95,95,95,96,96,95,95,98,96,95,98,96,96,96,96,95,95,95,98,96,95,98,96,95,98,96,0,0,0,0,0,0,102,101,102,101,101,101,102,101,101,101,101,102,101,102,102,101,102,101,102,101,102,101,6,6,6,0,0,0,105,105,6,105,6,105,105,105,0,105,105,6,6,105,6,6,6,6,105,6,105,105,105,105,105,105,0,105,105,105,105,105,105,6,105,6,105,6,105,6,122,0,0,0,21,111,21,111,21,21,111,111,21,111,21,111,21,111,111,21,111,21,111,21,111,10,10,0,10,10,10,10,10,10,10,10,10,10,119,0,0,119,0,0,119,112,116,118,119,112,116,118,112,116,116,118,0,112,112,112,112,112,112,119,112,116,118,112,112,112,112,119,112,116,118,118,116,116,118,118,112,116,118,118,112,112,112,112,112,112,112,112,112,112,0,0,0,112,119,112,116,118,119,112,116,118,119,112,116,118,112,121,121,0,121,121,121,121,121,121,121],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[[1,[4,[3]]],[[7,[5,6]]]],[1,[[9,[8]]]],0,[[1,3],[[7,[5,10]]]],[1,[[12,[11]]]],0,[-1,-1,[]],[-1,-2,[],[]],[1,[[13,[5]]]],0,[-1,[[7,[[5,[[4,[1]],14]]]]],[[16,[15]]]],[1,17],0,[1,[[19,[18]]]],0,[1,[[13,[20]]]],0,[[1,20],5],[[1,2],1],[[1,[9,[8]]],1],[[1,[12,[11]]],1],[[1,[13,[5]]],1],[[1,17],1],[[1,[19,[18]]],1],[[1,[13,[20]]],1],[[1,21],1],[[1,[19,[5]]],1],[1,21],0,[1,[[19,[5]]]],0,[1,5],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[8,3],24],[[8,[4,[3]]],[[7,[25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[8,3],[[27,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[8]]],[[16,[15]]]],[[8,3],[[7,[24]]]],[8,[[28,[[4,[3]],26]]]],0,0,[[8,3],[[7,[5]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[26,26],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[7,[30]]],[[16,[15]]]],[[[31,[-1]]],[[7,[[27,[26]]]]],32],[[[31,[-1]]],[[7,[30]]],32],[[26,[33,[-1]]],[[7,[5]]],34],[[30,[33,[-1]]],[[7,[5]]],34],[[29,29],35],[[26,26],35],[[30,30],35],[29,29],[[29,36],37],[[26,36],37],[[30,36],37],[38,29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[29,-1],5,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],30],0,0,0,[[30,-1],[[7,[5]]],[[16,[15]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1]]],5,[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-2,[[40,[-1]]],[],[[42,[],[[41,[-1]]]]]],[[[40,[-1]]],[[27,[[44,[[43,[-1]]]]]]],[]],[[[45,[-1]]],[[27,[[44,[[43,[-1]]]]]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[45,[-1]]],[[46,[-1]]],[]],[-1,[[47,[[43,[-1]]]]],[]],[[[27,[[44,[[43,[-1]]]]]],[27,[[44,[[43,[-1]]]]]]],[[46,[-1]]],[]],[[[27,[[44,[[43,[-1]]]]]],[27,[[44,[[43,[-1]]]]]]],[[45,[-1]]],[]],[[[46,[-1]]],[[27,[-2]]],[],[]],0,[[[46,[-1]]],[[27,[[43,[-1]]]]],[]],0,[[[40,[-1]],[47,[[43,[-1]]]]],[[44,[[43,[-1]]]]],[]],[[[40,[-1]],[27,[[44,[[43,[-1]]]]]]],5,[]],[[[40,[-1]]],[[45,[-1]]],[]],0,0,0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,[[[48,[-1]],[49,[-1]]],5,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]]],5,[]],[[[49,[-1]],36],37,50],[[[48,[-1]],36],37,50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[[48,[-1]]],[[51,[-1]]],52],[[],[[48,[-1]]],[]],[[[51,[-1]],-4],[[7,[35,-2]]],[],[],[[53,[-1,-2]]],[[42,[],[[41,[-3]]]]]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],[[[54,[-2,-1]]],[[0,[[42,[],[[41,[-1]]]]]]],[],[[42,[],[[41,[-1]]]]]],0,[-2,[[54,[-2,-1]]],[],[[42,[],[[41,[-1]]]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,[[[55,[-1]],-1],5,[56,57]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]],-1],35,[56,57]],[[[55,[-1]],-1],58,[56,57]],[[],[[55,[-1]]],[56,57]],0,[-1,-1,[]],[-1,-2,[],[]],[[[55,[-1]]],58,[56,57]],[[[55,[-1]],-1],[[7,[58]]],[56,57]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[59,[-1,-2]],-1],[[27,[-2]]],[56,57,60],[]],[[[59,[-1,-2]],-1],[[27,[-2]]],[56,57,60],[]],[[[59,[-1,-2]],-1],[[27,[[61,[-1,-2]]]]],[56,57,60],[]],[[[59,[-1,-2]]],[[27,[-1]]],[56,57,60],[]],[[[59,[-1,-2]],-1,-2],5,[56,57,60],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[59,[-1,-2]]],[56,57,60],[]],0,0,0,0,0,[[[59,[-1,-2]],-1],[[27,[[62,[-1,-2]]]]],[63,56,57,60],[]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,[[[64,[-1]]],[],[]],[[[27,[[44,[-1]]]]],[],[]],[[[27,[[44,[-1]]]]],[[64,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[64,[-1]]],[[64,[-1]]],[]],[[[44,[-1]]],[[44,[-1]]],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[[44,[-1]]],-2,[],[]],[-1,-1,[]],[[],[[64,[-1]]],[]],[[[65,[-1]]],[[44,[-1]]],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[[66,[-1,-2]]],[[0,[[42,[],[[41,[[67,[-1,5]]]]]]]]],[68,52],68],[[[66,[-2,-3]],-1],[[27,[[67,[-2,-3]]]]],52,[[69,[-1]],[70,[-1]],68,52],68],[[[66,[-2,-3]],[27,[-1]],[27,[-1]]],[[0,[[42,[],[[41,[[67,[-2,-3]]]]]]]]],[],[[70,[-1]],68,52],68],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[[-4,[27,[-1]],[27,[-1]]],[[0,[[42,[],[[41,[[67,[-2,-3]]]]]]]]],[],[68,52,[70,[-1]]],68,[[42,[],[[41,[[66,[-2,-3]]]]]]]],[[[27,[[71,[-2,-3]]]],-4,[27,[-1]],[27,[-1]]],[[0,[[42,[],[[41,[[67,[-2,-3]]]]]]]]],[],[68,52,[70,[-1]]],68,[[42,[],[[41,[[66,[-2,-3]]]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[72,72],73],[-1,[[7,[[5,[[74,[72]],75]]]]],[[16,[15]]]],0,0,[[72,72],35],[17,76],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[72]]],[[7,[[5,[[78,[77]],11]]]]]],[-1,[[7,[[5,[17,18]]]]],[[16,[15]]]],[[72,72],[[27,[73]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[-1,-2],[[22,[[27,[73]],79]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,[18,[[27,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,[[59,[11,80]]]],0,[18,[[59,[11,80]]]],[[18,81],[[7,[5]]]],[20,20],[[-1,-2],5,[],[]],[[20,20],73],[18,11],0,0,0,[[20,20],35],[18,[[5,[20,[27,[20]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[20,-1],5,39],0,[[18,20],[[7,[[5,[20,[27,[20]]]]]]]],0,[18,11],[18,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,35],[18,[[40,[77]]]],0,[18,[[40,[77]]]],0,[20,5],[[-1,11],18,[[82,[],[[41,[77]]]]]],0,[[20,20],[[27,[73]]]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[-1,-2],[[22,[[27,[73]],79]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[18,11],[[7,[35]]]],[[18,[83,[[27,[11]]]]],[[7,[[83,[[27,[11]]]]]]]],[[18,20],[[7,[[27,[20]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,11],[84,84],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[11,11],73],[[84,84],73],[85,11],0,[85,11],0,[85,86],0,[-1,[[7,[85]]],[[16,[15]]]],[[[31,[-1]]],[[7,[85]]],32],[[85,[33,[-1]]],[[7,[5]]],34],[[11,11],35],[[84,84],35],[[86,86],35],[[85,85],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[87,[[27,[86]]]],[88,[[27,[86]]]],[[11,-1],5,39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[84]]],[[42,[],[[41,[84]]]]]],[11,11],[-1,84,[[42,[],[[41,[84]]]]]],[[11,11],[[27,[73]]]],[[84,84],[[27,[73]]]],[85,84],0,[[85,-1],[[7,[5]]],[[16,[15]]]],[[85,11],85],[[85,11],85],[[85,86],85],[[85,84],85],[86,[[27,[87]]]],[-1,-2,[],[]],[-1,-2,[],[]],[86,[[27,[88]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[-1,-2],[[22,[[27,[73]],79]]],[],[]],[[-1,-2],[[22,[[27,[73]],79]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[[89,85],[[7,[77]]]],[[81,11],[[7,[77]]]],[-1,-2,[],[]],[[76,85],[[7,[77]]]],0,[77,[[7,[5]]]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],[76,[[7,[89]]]],0,0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[76,76],35],[76,90],[76,90],[[76,29],90],[-1,-1,[]],[90,76],[-1,-2,[],[]],[76,[[7,[[0,[[42,[],[[41,[[7,[[5,[90,29]]]]]]]]]]]]]],[76,[[7,[85]]]],[-1,[[27,[29]]],[[16,[15]]]],[76,90],[[],91],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[81,[[7,[5]]]],0,[[81,29],[[7,[[71,[92,[94,[93]]]]]]]],[81,[[7,[5]]]],[-1,-1,[]],[-1,-2,[],[]],[76,[[7,[81]]]],0,[81,[[7,[5]]]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[14,11],[[7,[5]]]],[-1,-1,[]],0,[-1,-2,[],[]],0,0,[14,[[7,[5]]]],[14,[[7,[5]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,0,0,0,0,0,[[95,96,[27,[[44,[[43,[77]]]]]],[78,[[44,[[43,[77]]]]]],97],[[7,[98]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[[43,[77]]]],[27,[[44,[[43,[77]]]]]]],[[78,[[44,[[43,[77]]]]]]]],0,0,0,0,[[[99,[77]]],85],[[-3,35],[[0,[[42,[],[[41,[[67,[-1,[94,[-2]]]]]]]]]]],[68,52],[],[[42,[],[[41,[[66,[-1,[94,[-2]]]]]]]]]],[[95,[78,[77]],35],[[7,[97]]]],0,0,[[95,96],[[7,[98]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[95,[99,[77]],35],[[7,[[27,[89]]]]]],[[[99,[77]]],35],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[[100,[18]],11],98],[[[100,[18]],11],[[7,[[5,[[27,[11]],[27,[11]]]],98]]]],[[[100,[18]],[27,[11]],[27,[11]]],96],[[[100,[18]],[27,[11]],[27,[11]]],35],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],101],0,[-1,-1,[]],[-1,-1,[]],[[101,-1],[[7,[5]]],[[104,[102],[[103,[35]]]]]],[101,[[7,[5]]]],[[101,20],[[7,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[101,102],5],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[105,-1],[[7,[[78,[90]]]]],[[42,[],[[41,[[7,[[5,[92,93]]]]]]]]]],[[105,[106,[92,93]]],[[7,[90]]]],[105,[[7,[[27,[90]]]]]],0,0,[105,[[7,[[0,[[42,[],[[41,[[7,[[5,[92,93]]]]]]]]]]]]]],[[6,36],37],[[6,36],37],[-1,-1,[]],[26,6],[-1,6,[[108,[107]]]],[-1,-1,[]],[109,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[105,[78,[90]]],[[7,[[27,[90]]]]]],[[105,[27,[90]]],[[7,[5]]]],[[1,[4,[3]]],[[7,[105,6]]]],0,0,0,0,0,[105,[[7,[5]]]],[105,[[7,[5,6]]]],0,0,[-1,110,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,[[7,[111]]]],0,0,[111,90],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[21]]],[[16,[15]]]],[90,[[7,[111]]]],[111,[[7,[5]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[10,36],37],[[10,36],37],[-1,-1,[]],[-1,-2,[],[]],[-1,110,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[112,[[7,[5]]]],0,0,0,0,0,0,0,0,[[112,[100,[18]]],[[7,[5]]]],[112,[[7,[5]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[112,113],[[7,[[27,[[5,[114,93]]]]]]]],[[112,[27,[113]],[27,[113]]],[[0,[[42,[],[[41,[[67,[114,93]]]]]]]]]],[[112,3,[27,[115]],[27,[115]]],[[7,[[0,[[42,[],[[41,[[67,[92,93]]]]]]]]]]]],[112,[[7,[35]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116,[[0,[[42,[],[[41,[77]]]]]]]],0,0,0,[[1,[117,[8]]],112],[[11,[27,[11]],[45,[77]]],116],[[[46,[77]],[27,[11]]],118],[118,[[27,[-1]]],[]],[[112,[27,[20]],[83,[[27,[11]]]]],5],[[112,114,[27,[93]]],[[7,[5]]]],[[112,114,[27,[93]],[27,[93]]],[[7,[5]]]],[112,[[7,[5]]]],[[1,58,-2],[[7,[-1]]],[],[[120,[112],[[103,[[7,[[119,[-1]]]]]]]]]],[[112,[83,[[27,[11]]]]],5],[[112,[27,[20]]],5],0,0,0,0,0,0,[112,[[7,[121]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[112,[100,[18]]],[[7,[5]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]]],"c":[],"p":[[5,"DB",34],[5,"File",901],[5,"SubValueSpec",902],[5,"Arc",903],[1,"tuple"],[6,"ScndIdxCreationJobErr",734],[8,"Result",904],[5,"DbState",80],[5,"RwLock",905],[6,"ScndIdxDeletionJobErr",805],[5,"CommitVer",484],[5,"Sender",906],[5,"Sender",907],[5,"FlushingAndCompactionWorker",632],[5,"Path",908],[10,"AsRef",909],[5,"LsmDir",393],[5,"LsmState",420],[5,"Mutex",910],[5,"ListVer",420],[5,"ScndIdxCreationsDir",782],[6,"Result",911],[5,"TypeId",912],[6,"ScndIdxRemovalResult",80],[6,"ScndIdxNewDefnResult",80],[5,"ScndIdxState",119],[6,"Option",913],[5,"HashMap",914],[5,"ScndIdxNum",119],[5,"ScndIdxsState",119],[5,"BufReader",915],[10,"Read",916],[5,"BufWriter",917],[10,"Write",916],[1,"bool"],[5,"Formatter",918],[8,"Result",918],[5,"PathNameNum",919],[10,"Hasher",920],[5,"AtomicLinkedList",177],[17,"Item"],[10,"Iterator",921],[5,"ListNode",177],[5,"NonNullSendPtr",344],[5,"ListSnapshot",177],[5,"ListIterator",177],[5,"Box",922],[5,"IntervalSet",232],[5,"Interval",232],[10,"Debug",918],[5,"MergedIntervalSet",232],[10,"Ord",923],[10,"TryPartialOrd",924],[5,"IteratorCache",269],[5,"Multiset",281],[10,"Hash",920],[10,"Eq",923],[1,"usize"],[5,"OrderedDict",296],[10,"Clone",925],[5,"Neighbors",296],[5,"RemovalResult",296],[10,"Sized",926],[5,"SendPtr",344],[5,"NonNull",927],[6,"CommittedEntrySet",378],[6,"Entry",928],[10,"Deser",929],[10,"Borrow",930],[10,"PartialOrd",923],[5,"WritableMemLog",931],[5,"CIUD",393],[6,"Ordering",923],[5,"BinaryHeap",932],[5,"AntiCollisionParentDir",919],[5,"UnitDir",590],[5,"CommittedUnit",562],[5,"Vec",933],[6,"Infallible",909],[5,"Boundary",420],[5,"StagingUnit",612],[10,"IntoIterator",934],[1,"array"],[5,"ReplacementNum",484],[5,"CommitInfo",484],[6,"CommitDataType",484],[1,"i64"],[1,"u64"],[5,"CompactedUnit",578],[5,"PathBuf",908],[5,"NamePattern",919],[5,"SVPKShared",935],[8,"PVShared",936],[6,"OptDatum",937],[5,"FCJob",662],[5,"SegmParams",662],[6,"CompactionResult",651],[6,"SegmDefnResult",662],[1,"slice"],[5,"MutexGuard",910],[5,"DanglingNodeSetsDeque",710],[5,"DanglingNodeSet",710],[17,"Output"],[10,"Fn",938],[5,"ScndIdxCreationJob",734],[5,"BTreeMap",939],[5,"Error",904],[10,"Into",909],[1,"never"],[5,"String",940],[5,"ScndIdxCreationJobDir",782],[5,"Txn",818],[5,"PrimaryKey",941],[8,"PKShared",941],[5,"SubValue",942],[5,"CachedSnap",818],[5,"RwLockReadGuard",943],[5,"TxnSnapIterator",818],[6,"ClientCommitDecision",818],[10,"FnMut",938],[6,"TryCommitResult",891],[15,"Existent",780],[5,"DictValue",296]],"b":[[751,"impl-Display-for-ScndIdxCreationJobErr"],[752,"impl-Debug-for-ScndIdxCreationJobErr"],[754,"impl-From%3CScndIdxState%3E-for-ScndIdxCreationJobErr"],[755,"impl-From%3CE%3E-for-ScndIdxCreationJobErr"],[810,"impl-Display-for-ScndIdxDeletionJobErr"],[811,"impl-Debug-for-ScndIdxDeletionJobErr"]]}],\
["pancake_server",{"doc":"","t":"CCCCCCFNNNNNHNNNNNHHHNNNNSSHCCCHHFNNHNOHNNNNHNNNHHNNNNNNHNOPPGFFFFNNNNNNNNNNNNCOOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNKFFFFFHNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNOMONNNNNNNNNNNNNNNNNNNNNNNNNCCCHHFNNHNOHNNNNHNNNHHNNNNNNHNOPPGFFFFNNNNNNNNNNNNCOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNONNNNNNNNNNKFFFFFHNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNOMONNNNNNNNNNNNNNNNNNNNNNNNNCCPPPPPGPPPGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOHHHHHH","n":["common","engine_serial","engine_ssi","oper","http_utils","server","AppError","borrow","borrow_mut","deref","deref_mut","drop","entries_to_string","from","from","init","into","into_response","kv_to_string","logger","ok","try_from","try_into","type_id","vzip","ENV_VAR_BIND_ADDR","ENV_VAR_ROOT_DIR","default_bind_addr","query_handlers","route_handlers","wasm","handle_oper","handle_stmt","AppState","borrow","borrow_mut","create_router","db","db","delete_one","deref","deref_mut","drop","from","get_one","init","into","new","put_one","query","set_db","set_wasm_engine","try_from","try_into","type_id","vzip","wasm","wasm_engine","wasm_engine","Abort","Commit","CommitDecision","DbProvider","Udf","WasmEngine","WasmState","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","db","db","db","db_provider","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","engine","fmt","from","from","from","from","from","from_ref","get_pk_one","get_pk_range","get_sv_range","init","init","init","init","init","instantiate","into","into","into","into","into","linker","new","new","put","run_txn","run_txn","serve","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Db","Pk","Pkpv","Pv","Sv","SvSpec","add_to_linker","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","bytes","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_pk_one","get_pk_range","get_sv_range","init","init","init","init","init","into","into","into","into","into","pk","put","pv","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","query_handlers","route_handlers","wasm","handle_oper","handle_stmt","AppState","borrow","borrow_mut","create_router","db","db","delete_one","deref","deref_mut","drop","from","get_one","init","into","new","put_one","query","set_db","set_wasm_engine","try_from","try_into","type_id","vzip","wasm","wasm_engine","wasm_engine","Abort","Commit","CommitDecision","DbProvider","Udf","WasmEngine","WasmState","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","db","db","db_provider","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","engine","fmt","from","from","from","from","from","from_ref","get_pk_one","get_pk_range","get_sv_range","init","init","init","init","init","instantiate","into","into","into","into","into","linker","new","new","put","run_txn","run_txn","serve","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","txn","txn_ptr","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Db","Pk","Pkpv","Pv","Sv","SvSpec","add_to_linker","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","bytes","bytes","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_pk_one","get_pk_range","get_sv_range","init","init","init","init","init","into","into","into","into","into","pk","put","pv","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","api","query_basic","CreateScndIdx","DelScndIdx","GetPK","GetSV","One","Operation","Put","Query","Range","SearchRange","Statement","all","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","hi","lo","datum","eos","opt_datum","parse","root","svspec"],"q":[[0,"pancake_server"],[4,"pancake_server::common"],[6,"pancake_server::common::http_utils"],[25,"pancake_server::common::server"],[28,"pancake_server::engine_serial"],[31,"pancake_server::engine_serial::query_handlers"],[33,"pancake_server::engine_serial::route_handlers"],[59,"pancake_server::engine_serial::wasm"],[147,"pancake_server::engine_serial::wasm::db"],[249,"pancake_server::engine_ssi"],[252,"pancake_server::engine_ssi::query_handlers"],[254,"pancake_server::engine_ssi::route_handlers"],[280,"pancake_server::engine_ssi::wasm"],[369,"pancake_server::engine_ssi::wasm::db"],[471,"pancake_server::oper"],[473,"pancake_server::oper::api"],[541,"pancake_server::oper::api::SearchRange"],[543,"pancake_server::oper::query_basic"],[549,"alloc::string"],[550,"anyhow"],[551,"core::result"],[552,"core::fmt"],[553,"pancake_engine_common::entry"],[554,"core::iter::traits::iterator"],[555,"axum_core::response"],[556,"axum_core::body"],[557,"http::request"],[558,"axum::middleware::from_fn"],[559,"axum_core::response::into_response"],[560,"http::status"],[561,"core::convert"],[562,"core::any"],[563,"pancake_engine_common::fs_utils::administrative"],[564,"pancake_engine_serial::db"],[565,"tokio::sync::rwlock"],[566,"alloc::sync"],[567,"axum::routing"],[568,"axum::extract::path"],[569,"axum::extract::state"],[570,"anyhow"],[571,"alloc::vec"],[572,"wasmtime::component::component"],[573,"wasmtime::component::linker"],[574,"wasmtime::component::instance"],[575,"wasmtime::store::context"],[576,"core::ops::function"],[577,"core::marker"],[578,"core::marker"],[579,"pancake_engine_ssi::opers::txn"],[580,"core::cmp"],[581,"core::iter::adapters::peekable"],[582,"pancake_types::serde::datum"],[583,"pancake_types::types::sv_spec"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not actually static. Bound to the lifetime of the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Instantiates the provided <code>module</code> using the specified …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Low-level creation wrapper for wrapping up the exports of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Instantiates the provided <code>module</code> using the specified …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Low-level creation wrapper for wrapping up the exports of …","","","","","","","","","","","","","","","","’db &gt; ’txn &gt; ’one_try <code>&#39;one_try</code> refers to the …","This field stands in for <code>*mut Txn&lt;&#39;one_try&gt;</code>. We could use …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <em>very</em> basic parser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,10,10,10,10,10,0,10,10,10,10,10,0,0,0,10,10,10,10,0,0,0,0,0,0,0,0,0,25,25,0,25,25,0,25,25,25,25,0,25,25,25,0,0,25,25,25,25,25,25,0,25,25,32,32,0,0,0,0,0,31,76,35,44,32,31,76,35,44,32,32,32,0,31,35,76,31,76,35,44,32,31,76,35,44,32,31,76,35,44,32,31,32,31,76,35,44,32,32,35,35,35,31,76,35,44,32,44,31,76,35,44,32,31,31,44,35,44,44,31,32,31,76,35,44,32,31,76,35,44,32,31,76,35,44,32,31,76,35,44,32,0,0,0,0,0,0,0,40,41,37,48,36,40,41,37,48,36,40,41,48,36,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,51,51,51,40,41,37,48,36,40,41,37,48,36,37,51,37,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,40,41,37,48,36,0,0,0,0,0,0,58,58,0,58,58,0,58,58,58,58,0,58,58,58,0,0,58,58,58,58,58,58,0,58,58,60,60,0,0,0,0,0,59,77,61,66,60,59,77,61,66,60,60,60,0,59,77,59,77,61,66,60,59,77,61,66,60,59,77,61,66,60,59,60,59,77,61,66,60,60,61,61,61,59,77,61,66,60,66,59,77,61,66,60,59,59,66,61,66,66,59,60,59,77,61,66,60,59,77,61,66,60,61,61,59,77,61,66,60,59,77,61,66,60,0,0,0,0,0,0,0,64,65,63,67,62,64,65,63,67,62,64,65,67,62,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,69,69,69,64,65,63,67,62,64,65,63,67,62,63,69,63,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,64,65,63,67,62,0,0,23,23,24,24,70,0,24,23,70,0,0,70,70,23,24,70,23,24,70,23,24,70,23,24,70,23,24,70,23,24,70,23,23,23,23,24,24,24,24,70,70,70,70,23,24,70,23,23,24,70,23,24,70,23,24,70,23,24,70,23,24,70,23,24,70,23,24,70,78,78,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,2],[-3,[[5,[3,4]]],6,6,[[9,[],[[7,[[8,[-1,-2]]]]]]]],[4,10],[-1,-1,[]],[[],1],[-1,-2,[],[]],[10,11],[[3,-1,-2],2,6,6],[[[13,[12]],14],[[0,[15]]]],[-1,[[5,[[2,[16,3]],10]]],[[17,[3]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[19,20],0,0,0,[[[22,[21]],23],[[5,[[2,[16,3]],10]]]],[[[22,[21]],24],[[5,[[2,[16,3]],10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[25]]],27],[25,[[26,[[22,[21]]]]]],0,[[[28,[3]],[29,[[26,[25]]]]],[[30,[[2,[16,3]],10]]]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[[[28,[3]],[29,[[26,[25]]]]],[[30,[[2,[16,3]],10]]]],[[],1],[-1,-2,[],[]],[[[26,[[22,[21]]]],31],25],[[[28,[3]],[29,[[26,[25]]]],3],[[30,[[2,[16,3]],10]]]],[[[29,[[26,[25]]]],3],[[30,[[2,[16,3]],10]]]],[[25,[26,[[22,[21]]]]],25],[[25,31],25],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[[[29,[[26,[25]]]],12],[[30,[[2,[16,3]],10]]]],[25,31],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[[-1,-2],2,[],[]],0,0,0,0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],0,[[32,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[35,36],[[30,[[30,[[38,[37]],3]]]]]],[[35,[38,[36]],[38,[36]]],[[30,[[30,[[39,[37]],3]]]]]],[[35,40,[38,[41]],[38,[41]]],[[30,[[30,[[39,[37]],3]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[-2,42,[43,[-1]]],[[30,[[2,[44,45]]]]],[],[[47,[],[[46,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[26,[[22,[21]]]]],[[30,[31]]]],[[-1,45],[[30,[44]]],47],[[35,36,[38,[48]]],[[30,[[30,[2,3]]]]]],[[44,-1],[[30,[[30,[32,3]]]]],47],0,[[31,[50,[49]]],[[30,[3]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[[43,[-1]],-3],[[30,[2]]],[],51,[[53,[-1],[[52,[-2]]]],54,55,56]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[40,40],[41,41],[37,37],[48,48],[36,36],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[[40,33],34],[[41,33],34],[[37,33],34],[[48,33],34],[[36,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[51,36],[[30,[[5,[[38,[37]],3]]]]]],[[51,[38,[36]],[38,[36]]],[[30,[[5,[[39,[37]],3]]]]]],[[51,40,[38,[41]],[38,[41]]],[[30,[[5,[[39,[37]],3]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[51,36,[38,[48]]],[[30,[[5,[2,3]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[57,23],[[30,[[2,[16,3]],10]]]],[[57,24],[[30,[[2,[16,3]],10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[58]]],27],[58,[[26,[57]]]],0,[[[28,[3]],[29,[[26,[58]]]]],[[30,[[2,[16,3]],10]]]],[1,-1,[]],[1,-1,[]],[1,2],[-1,-1,[]],[[[28,[3]],[29,[[26,[58]]]]],[[30,[[2,[16,3]],10]]]],[[],1],[-1,-2,[],[]],[[[26,[57]],59],58],[[[28,[3]],[29,[[26,[58]]]],3],[[30,[[2,[16,3]],10]]]],[[[29,[[26,[58]]]],3],[[30,[[2,[16,3]],10]]]],[[58,[26,[57]]],58],[[58,59],58],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[[[29,[[26,[58]]]],12],[[30,[[2,[16,3]],10]]]],[58,59],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[[-1,-2],2,[],[]],0,0,0,[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],0,[[60,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[61,62],[[30,[[30,[[38,[63]],3]]]]]],[[61,[38,[62]],[38,[62]]],[[30,[[30,[[39,[63]],3]]]]]],[[61,64,[38,[65]],[38,[65]]],[[30,[[30,[[39,[63]],3]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[-2,42,[43,[-1]]],[[30,[[2,[66,45]]]]],[],[[47,[],[[46,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[26,[57]]],[[30,[59]]]],[[-1,45],[[30,[66]]],47],[[61,62,[38,[67]]],[[30,[[30,[2,3]]]]]],[[66,-1],[[30,[[30,[60,3]]]]],47],0,[[59,[50,[49]],1],[[30,[3]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[61,68],0,[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[[43,[-1]],-3],[[30,[2]]],[],69,[[53,[-1],[[52,[-2]]]],54,55,56]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[64,64],[65,65],[63,63],[67,67],[62,62],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[1,2],[1,2],[[64,33],34],[[65,33],34],[[63,33],34],[[67,33],34],[[62,33],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[69,62],[[30,[[5,[[38,[63]],3]]]]]],[[69,[38,[62]],[38,[62]]],[[30,[[5,[[39,[63]],3]]]]]],[[69,64,[38,[65]],[38,[65]]],[[30,[[5,[[39,[63]],3]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[69,62,[38,[67]]],[[30,[[5,[2,3]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[70,[-1]]],[]],[[[70,[-1]]],[[2,[[38,[-1]],[38,[-1]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,-1,[]],[1,2],[1,2],[1,2],[[23,23],71],[[24,24],71],[[[70,[-1]],[70,[-1]]],71,72],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[-1,-2],71,[],[]],[[23,33],34],[[24,33],34],[[[70,[-1]],33],34,6],[24,23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[],1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[73,[-1]]],[[30,[74]]],[[9,[],[[7,[20]]]]]],[-1,[[30,[2]]],[[9,[],[[7,[20]]]]]],[[[73,[-1]]],[[30,[[38,[74]]]]],[[9,[],[[7,[20]]]]]],[20,[[30,[23]]]],[[[73,[-1]]],[[30,[23]]],[[9,[],[[7,[20]]]]]],[-1,[[30,[75]]],[[9,[],[[7,[20]]]]]]],"c":[],"p":[[1,"usize"],[1,"tuple"],[5,"String",549],[5,"Error",550],[6,"Result",551],[10,"Debug",552],[17,"Item"],[6,"Entry",553],[10,"Iterator",554],[5,"AppError",6],[8,"Response",555],[5,"Body",556],[5,"Request",557],[5,"Next",558],[10,"IntoResponse",559],[5,"StatusCode",560],[10,"Into",561],[5,"TypeId",562],[6,"EngineType",563],[1,"str"],[5,"DB",564],[5,"RwLock",565],[6,"Operation",473],[6,"Statement",473],[5,"AppState",33],[5,"Arc",566],[5,"Router",567],[5,"Path",568],[5,"State",569],[8,"Result",550],[5,"WasmEngine",59],[6,"CommitDecision",59],[5,"Formatter",552],[8,"Result",552],[5,"DbProvider",59],[5,"Pk",147],[5,"Pkpv",147],[6,"Option",570],[5,"Vec",571],[5,"SvSpec",147],[5,"Sv",147],[5,"Component",572],[5,"Linker",573],[5,"Udf",59],[5,"Instance",574],[17,"Data"],[10,"AsContextMut",575],[5,"Pv",147],[1,"u8"],[1,"slice"],[10,"Db",147],[17,"Output"],[10,"Fn",576],[10,"Send",577],[10,"Sync",577],[10,"Copy",577],[5,"DB",578],[5,"AppState",254],[5,"WasmEngine",280],[6,"CommitDecision",280],[5,"DbProvider",280],[5,"Pk",369],[5,"Pkpv",369],[5,"SvSpec",369],[5,"Sv",369],[5,"Udf",280],[5,"Pv",369],[5,"Txn",579],[10,"Db",369],[6,"SearchRange",473],[1,"bool"],[10,"PartialEq",580],[5,"Peekable",581],[6,"Datum",582],[5,"SubValueSpec",583],[5,"WasmState",59],[5,"WasmState",280],[15,"Range",541]],"b":[]}],\
["pancake_server_serial",{"doc":"","t":"H","n":["main"],"q":[[0,"pancake_server_serial"],[1,"anyhow"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[1,"tuple"],[8,"Result",1]],"b":[]}],\
["pancake_server_ssi",{"doc":"","t":"H","n":["main"],"q":[[0,"pancake_server_ssi"],[1,"anyhow"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[1,"tuple"],[8,"Result",1]],"b":[]}],\
["pancake_types",{"doc":"","t":"CCCCHFFFFOCCOOOOOOCOPFPGPNNNNNNNNNNNNNNNOOOONNNNNNFFNNNNNNNNNNNNNNOONNNNNNFONNNNNNNNNNNNONNNNNNPPGGFPPPGGPPPPPPPPFCCCPGPGPPPPNNNNNNNCNNNNNNNNNNNNNNNNNCNNNNNCNNNNNNNNNNPGPNNNNNNNNNFNNNNNNNNNPGFPPPPSSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNKPIIFPFGKKFFFOOOMOOOCOOOCMCMCOCCIFONNNNNNNNNNNNNNNNNNOONNNNIFONNNNNNNNNNNOONNNNKKKMNNMNNMPPGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNONNNNNNNNONNCNNNNFNNNNNNNNNNNNNONNONNNN","n":["io_utils","iters","serde","types","read_until_then_trim","KeyIterator","KeyValueIterator","KeyValueRangeIterator","KeyValueReader","_phant","iter_range","iters_simple","q_hi","q_lo","r","r","r","r","reader","state","InRange","KeyValueRangeIterator","NotBegun","State","Terminated","borrow","borrow","borrow_mut","borrow_mut","cmp_k_vs_q_hi","cmp_k_vs_q_lo","from","from","get_first_k_gte_q_lo","get_next_kv","into","into","into_iter","new","next","q_hi","q_lo","r","state","try_from","try_from","try_into","try_into","type_id","type_id","KeyIterator","KeyValueIterator","borrow","borrow","borrow_mut","borrow_mut","from","from","from","from","into","into","into_iter","into_iter","next","next","r","r","try_from","try_from","try_into","try_into","type_id","type_id","KeyValueReader","_phant","borrow","borrow_mut","deser_k","deser_k_skip_v","deser_kv","deser_v","from","from","into","into_iter_k","into_iter_kv","into_iter_kv_range","r","skip_k","skip_kv","skip_v","try_from","try_into","type_id","Bytes","Bytes","Datum","DatumType","DatumTypeInt","EOF","I64","I64","OptDatum","ReadResult","Some","Some","Str","Str","Tombstone","Tombstone","Tuple","Tuple","WriteLen","datum","datum_type","lengths","Bytes","Datum","I64","OptDatum","Some","Str","Tombstone","Tuple","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deser","deser","deser","deser","deser_","deser_dynalen_body","deser_tuple_body","eq","eq","fmt","fmt","from","from","from","into","into","intra_tuple_datum_len","partial_cmp","ser","ser","ser","ser","ser","ser_","serde_test","skip","skip","skip","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","EOF","ReadResult","Some","borrow","borrow_mut","eq","fmt","from","into","try_from","try_into","type_id","WriteLen","borrow","borrow_mut","deref","from","into","new_manual","try_from","try_into","type_id","Bytes","DatumType","DatumTypeInt","I64","Str","Tombstone","Tuple","_IMPL_NUM_FromPrimitive_FOR_DatumType","_IMPL_NUM_ToPrimitive_FOR_DatumType","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deref","deser","eq","fmt","from","from","from","from","from","from","from_i64","from_u64","hash","into","into","partial_cmp","to_i64","to_owned","to_owned","to_u64","try_from","try_from","try_from","try_into","try_into","type_id","type_id","DatumBodyLen","TupleMembersCount","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deser","deser","from","from","from_dynalen_body","from_members","into","into","new_manual","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Deser","Own","PKShared","PVShared","PrimaryKey","Ref","SVPKShared","SVShared","Ser","Serializable","SubValue","SubValueSpec","Value","alloc","alloc","datum_type","deser","member_idxs","phantom","phantom","pk","pk","ptr","ptr","pv","ser","serializable","skip","sv","sv","sv_spec","svpk","PKShared","PrimaryKey","alloc","borrow","borrow","borrow_mut","cmp","deref","deser","eq","eq","eq","fmt","from","from","from","from","into","partial_cmp","partial_cmp","partial_cmp","phantom","ptr","skip","try_from","try_into","type_id","PVShared","Value","alloc","borrow","borrow","borrow_mut","deref","deser","eq","fmt","from","from","from","into","phantom","ptr","skip","try_from","try_into","type_id","Deser","Ser","Serializable","deser","deser_solo","deser_solo","ser","ser_solo","ser_solo","skip","Own","Ref","SVShared","SubValue","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","deref","deser","eq","eq","fmt","fmt","from","from","from","into","into","partial_cmp","skip","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","SubValueSpec","borrow","borrow_mut","datum_type","deser","deser_solo","eq","extract","fmt","from","hash","into","member_idxs","ser","ser_solo","test","try_from","try_into","type_id","whole","SVPKShared","borrow","borrow","borrow_mut","clone","clone_into","cmp","deser","eq","eq","from","into","partial_cmp","partial_cmp","pk","ser","skip","sv","to_owned","try_from","try_into","type_id"],"q":[[0,"pancake_types"],[4,"pancake_types::io_utils"],[5,"pancake_types::iters"],[20,"pancake_types::iters::iter_range"],[50,"pancake_types::iters::iters_simple"],[74,"pancake_types::iters::reader"],[95,"pancake_types::serde"],[117,"pancake_types::serde::datum"],[167,"pancake_types::serde::datum::deser"],[179,"pancake_types::serde::datum::ser"],[189,"pancake_types::serde::datum_type"],[234,"pancake_types::serde::lengths"],[263,"pancake_types::types"],[295,"pancake_types::types::pk"],[322,"pancake_types::types::pv"],[342,"pancake_types::types::serializable"],[352,"pancake_types::types::sv"],[384,"pancake_types::types::sv_spec"],[404,"pancake_types::types::svpk"],[426,"alloc::vec"],[427,"anyhow"],[428,"std::io"],[429,"core::cmp"],[430,"std::io"],[431,"core::result"],[432,"core::any"],[433,"core::clone"],[434,"anyhow"],[435,"core::convert"],[436,"core::cmp"],[437,"core::fmt"],[438,"core::hash"],[439,"alloc::sync"]],"d":["","Iterators work on files that contain “K“s and “V“s …","Serialization format","","","","","An iterator that reads a file that stores serialized <code>K</code> and …","","","","","","","","","","","","","","An iterator that reads a file that stores serialized <code>K</code> and …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","We manually map enum members to data_type integers because:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","We manually map enum members to data_type integers because:","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A tuple containing a sub-value and a primary-key.","","","","A sub-portion of a Value","<code>SubValueSpec</code> specifies a contiguous sub-portion of a <code>Value</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A sub-portion of a Value","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","<code>SubValueSpec</code> specifies a contiguous sub-portion of a <code>Value</code>.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","A tuple containing a sub-value and a primary-key.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Orders by sub-value, and <em>not</em> by primary-key. In case …","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,13,0,0,6,6,6,13,16,17,0,6,55,0,55,0,55,6,55,6,55,6,6,6,55,6,6,6,55,6,6,6,6,6,6,6,6,55,6,55,6,55,0,0,16,17,16,17,16,16,17,17,16,17,16,17,16,17,16,17,16,17,16,17,16,17,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,22,38,0,0,0,18,22,38,0,0,18,20,22,38,20,38,22,38,0,0,0,0,22,0,22,0,20,22,20,22,22,20,22,20,20,20,22,0,22,20,20,20,20,20,22,20,22,20,22,20,20,22,20,22,22,0,22,22,20,20,22,0,22,20,20,20,22,20,22,20,22,20,18,0,18,18,18,18,18,18,18,18,18,18,0,34,34,34,34,34,34,34,34,34,38,0,0,38,38,38,38,0,0,37,38,37,38,37,38,37,38,38,37,37,38,38,37,37,37,38,38,38,38,38,38,37,38,38,38,37,38,38,37,38,38,37,38,37,38,0,0,33,42,33,42,33,42,33,42,33,42,33,42,33,42,33,42,33,42,33,33,42,33,42,33,42,33,42,0,51,0,0,0,51,0,0,0,0,0,0,0,46,49,53,10,53,46,49,0,48,46,49,0,45,0,10,0,48,0,0,0,0,46,46,47,47,47,47,47,46,46,47,47,46,46,47,47,47,46,46,47,46,46,47,47,47,47,0,0,49,49,50,50,50,50,50,50,49,50,50,50,49,49,50,50,50,50,0,0,0,10,10,10,45,45,45,10,51,51,0,0,52,51,52,51,51,51,52,52,51,52,52,51,52,51,52,52,51,52,51,52,52,51,52,51,52,51,52,51,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48],"f":[0,0,0,0,[[-1,1,[2,[1]]],[[4,[3]]],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1,-3,-4,-2]],-3],7,[8,9],[],[10,[11,[-2]]],10],[[[6,[-1,-3,-4,-2]],-3],7,[8,9],[],[10,[11,[-2]]],10],[-1,-1,[]],[-1,-1,[]],[[[6,[-1,-3,-4,-2]]],[[4,[[12,[-3]]]]],[8,9],[],[10,[11,[-2]]],10],[[[6,[-1,-3,-4,-2]]],[[4,[[12,[[3,[-3,-4]]]]]]],[8,9],[],[10,[11,[-2]]],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-3,-4]],[12,[-2]],[12,[-2]]],[[6,[-1,-3,-4,-2]]],[8,9],[],[10,[11,[-2]]],10],[[[6,[-1,-3,-4,-2]]],[[12,[-5]]],[8,9],[],[10,[11,[-2]]],10,[]],0,0,0,0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2,-3]]],[[16,[-1,-2,-3]]],[],[],[]],[-1,-1,[]],[[[13,[-1,-2,-3]]],[[17,[-1,-2,-3]]],[],[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1,-2,-3]]],[[12,[-4]]],[8,9],10,10,[]],[[[17,[-1,-2,-3]]],[[12,[-4]]],[8,9],10,10,[]],0,0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2,-3]]],[[4,[[18,[-2]]]]],[8,9],10,10],[[[13,[-1,-2,-3]]],[[4,[[18,[-2]]]]],[8,9],10,10],[[[13,[-1,-2,-3]]],[[4,[[18,[[3,[-2,-3]]]]]]],[8,9],10,10],[[[13,[-1,-2,-3]]],[[4,[[3,[19,-3]]]]],[8,9],10,10],[-1,[[13,[-1,-2,-3]]],8,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[13,[-1,-2,-3]]],[[17,[-1,-2,-3]]],[8,9],10,10],[[[13,[-1,-2,-3]]],[[16,[-1,-2,-3]]],[8,9],10,10],[[[13,[-1,-3,-4]],[12,[-2]],[12,[-2]]],[[6,[-1,-3,-4,-2]]],[8,9],[],[[11,[-2]],10],10],0,[[[13,[-1,-2,-3]]],[[4,[[18,[3]]]]],[8,9],10,10],[[[13,[-1,-2,-3]]],[[4,[[18,[3]]]]],[8,9],10,10],[[[13,[-1,-2,-3]]],[[4,[19]]],[8,9],10,10],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[-1]]],21],[[-1,-2],3,[],[]],[[22,22],7],0,[-1,[[14,[[18,[-2]],23]]],[8,9],[]],[-1,[[4,[[18,[[20,[22]]]]]]],[8,9]],[-1,[[4,[[18,[[20,[-3]]]]]]],[8,9],[[24,[23]]],[[26,[22],[[25,[-2]]]]]],[-1,[[4,[[18,[[20,[22]]]]]]],[8,9]],[[-1,19],[[4,[[2,[1]],27]]],8],[[-1,19],[[4,[22]]],[8,9]],[[22,22],28],[[[20,[-1]],[20,[-1]]],28,29],[[22,30],31],[[[20,[-1]],30],31,32],[-1,-1,[]],[-1,-1,[]],[[[12,[-1]]],[[20,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,[[4,[33]]]],[[22,22],[[12,[7]]]],0,[[-1,-2],[[14,[34,23]]],[],35],[[22,-1],[[4,[34]]],35],[[[20,[-1]],-2],[[4,[34]]],[[36,[22]]],35],[[[20,[22]],-1],[[4,[34]]],35],[[22,-1],[[4,[34]]],35],0,[-1,[[14,[[18,[3]],23]]],[8,9]],[-1,[[4,[[18,[3]]]]],[8,9]],[-1,[[4,[[18,[3]]]]],[8,9]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[-1]],[18,[-1]]],28,29],[[[18,[-1]],30],31,32],[-1,-1,[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[34,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[19,34],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[38,38],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[38,38],7],[37,-1,[]],[-1,[[4,[[3,[19,37]],27]]],8],[[38,38],28],[[38,30],31],[38,37],[-1,-1,[]],[1,37],[[[20,[22]]],38],[22,38],[-1,-1,[]],[39,[[12,[38]]]],[40,[[12,[38]]]],[[38,-1],3,41],[-1,-2,[],[]],[-1,-2,[],[]],[[38,38],[[12,[7]]]],[38,[[12,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[38,[[12,[40]]]],[-1,[[14,[-2]]],[],[]],[37,[[4,[38]]]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[42,42],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[33,-1,[]],[42,-1,[]],[-1,[[4,[[3,[19,33]],27]]],8],[-1,[[4,[[3,[19,42]],27]]],8],[-1,-1,[]],[-1,-1,[]],[[[43,[1]]],[[4,[33]]]],[[[43,[-1]]],[[4,[42]]],[[36,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[44,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[4,[[18,[10]]]]],[8,9]],0,0,0,0,0,0,0,0,[[45,-1],[[4,[34]]],35],0,[-1,[[4,[[18,[3]]]]],[8,9]],0,0,0,0,0,0,0,[46,22],[-1,-2,[],[]],[-1,-2,[],[]],[[47,47],7],[47,-1,[]],[-1,[[14,[[18,[-2]],23]]],[8,9],[]],[[46,47],28],[[46,47],28],[[47,47],28],[[47,30],31],[48,46],[22,46],[22,47],[-1,-1,[]],[-1,-2,[],[]],[[46,47],[[12,[7]]]],[[46,47],[[12,[7]]]],[[47,47],[[12,[7]]]],0,0,[-1,[[14,[[18,[3]],23]]],[8,9]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],0,0,0,[49,22],[-1,-2,[],[]],[-1,-2,[],[]],[50,-1,[]],[-1,[[14,[[18,[-2]],23]]],[8,9],[]],[[50,50],28],[[50,30],31],[22,49],[-1,-1,[]],[22,50],[-1,-2,[],[]],0,0,[-1,[[14,[[18,[3]],23]]],[8,9]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],0,0,0,[-1,[[4,[[18,[10]]]]],[8,9]],[[[43,[1]]],[[4,[10]]]],[[[43,[1]]],[[4,[10]]]],[[45,-1],[[4,[34]]],35],[45,[[4,[[2,[1]]]]]],[45,[[4,[[2,[1]]]]]],[-1,[[4,[[18,[3]]]]],[8,9]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,51],[[-1,-2],3,[],[]],[[52,52],7],[52,-1,[]],[51,52],[-1,[[14,[[18,[-2]],23]]],[8,9],[]],[[52,52],28],[[51,51],28],[[52,30],31],[[51,30],31],[-1,-1,[]],[22,52],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[52,52],[[12,[7]]]],[-1,[[14,[[18,[3]],23]]],[8,9]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[4,[53]]],5],[[[43,[1]]],[[4,[53]]]],[[53,53],28],[[53,[54,[50]]],[[12,[51]]]],[[53,30],31],[-1,-1,[]],[[53,-1],3,41],[-1,-2,[],[]],0,[[53,-1],[[4,[3]]],35],[53,[[4,[[2,[1]]]]]],0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[38,53],0,[-1,-2,[],[]],[48,46],[-1,-2,[],[]],[48,48],[[-1,-2],3,[],[]],[[48,48],7],[-1,[[4,[[18,[48]]]]],[8,9]],[[48,-1],28,[[36,[52]]]],[[48,48],28],[-1,-1,[]],[-1,-2,[],[]],[[48,48],[[12,[7]]]],[[48,-1],[[12,[7]]],[[36,[52]]]],0,[[48,-1],[[4,[34]]],35],[-1,[[4,[[18,[3]]]]],[8,9]],0,[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]]],"c":[],"p":[[1,"u8"],[5,"Vec",426],[1,"tuple"],[8,"Result",427],[10,"BufRead",428],[5,"KeyValueRangeIterator",20],[6,"Ordering",429],[10,"Read",428],[10,"Seek",428],[10,"Deser",342],[10,"PartialOrd",429],[6,"Option",430],[5,"KeyValueReader",74],[6,"Result",431],[5,"TypeId",432],[5,"KeyValueIterator",50],[5,"KeyIterator",50],[6,"ReadResult",167],[1,"usize"],[6,"OptDatum",117],[10,"Clone",433],[6,"Datum",117],[5,"Error",427],[10,"Into",434],[17,"Error"],[10,"TryFrom",434],[5,"Error",435],[1,"bool"],[10,"PartialEq",429],[5,"Formatter",436],[8,"Result",436],[10,"Debug",436],[5,"DatumBodyLen",234],[5,"WriteLen",179],[10,"Write",428],[10,"Borrow",437],[5,"DatumTypeInt",189],[6,"DatumType",189],[1,"i64"],[1,"u64"],[10,"Hasher",438],[5,"TupleMembersCount",234],[1,"slice"],[1,"u32"],[10,"Ser",342],[8,"PKShared",295],[5,"PrimaryKey",295],[5,"SVPKShared",404],[8,"PVShared",322],[5,"Value",322],[6,"SVShared",352],[5,"SubValue",352],[5,"SubValueSpec",384],[5,"Arc",439],[6,"State",20]],"b":[[134,"impl-OptDatum%3CDatum%3E"],[135,"impl-Deser-for-OptDatum%3CT%3E"],[153,"impl-Ser-for-OptDatum%3CT%3E"],[154,"impl-OptDatum%3CDatum%3E"],[158,"impl-OptDatum%3CDatum%3E"],[159,"impl-Deser-for-OptDatum%3CT%3E"],[211,"impl-From%3CDatumType%3E-for-DatumTypeInt"],[213,"impl-From%3Cu8%3E-for-DatumTypeInt"],[214,"impl-From%3C%26OptDatum%3CDatum%3E%3E-for-DatumType"],[215,"impl-From%3C%26Datum%3E-for-DatumType"],[304,"impl-PartialEq%3CPrimaryKey%3E-for-Arc%3CPrimaryKey%3E"],[305,"impl-PartialEq%3C%26PrimaryKey%3E-for-Arc%3CPrimaryKey%3E"],[308,"impl-From%3CSVPKShared%3E-for-Arc%3CPrimaryKey%3E"],[309,"impl-From%3CDatum%3E-for-Arc%3CPrimaryKey%3E"],[313,"impl-PartialOrd%3C%26PrimaryKey%3E-for-Arc%3CPrimaryKey%3E"],[314,"impl-PartialOrd%3CPrimaryKey%3E-for-Arc%3CPrimaryKey%3E"],[412,"impl-PartialEq%3CO%3E-for-SVPKShared"],[413,"impl-PartialEq-for-SVPKShared"],[416,"impl-PartialOrd-for-SVPKShared"],[417,"impl-PartialOrd%3CO%3E-for-SVPKShared"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
